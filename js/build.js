(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _slider = require('./slider');

var _slider2 = _interopRequireDefault(_slider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FORTIFY_POOLING_DELAY = 5000;

function createElement() {
  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';
  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var id = arguments[2];
  var content = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  var element = document.createElement(tag);
  if (typeof content === 'string') {
    element.innerHTML = content;
  }
  if (content instanceof HTMLElement) {
    element.appendChild(content);
  }
  if (className) {
    element.className = className;
  }
  if (id) {
    element.id = id;
  }

  Object.keys(options).forEach(function (opt) {
    return element[opt] = options[opt];
  });

  return element;
}

function createSVG(data) {
  return '\n    <svg xmlns="http://www.w3.org/2000/svg" class="' + data.className + '" viewBox="' + data.viewBox + '">\n        <use xlink:href="#' + data.id + '"></use>\n    </svg>\n  ';
  var element = createElement('svg', data.className);
  var use = document.createElementNS('http://www.w3.org/2000/svg', 'use');

  use.setAttribute('xlink:href', '#' + data.id);
  element.setAttribute('viewBox', data.viewBox);

  element.appendChild(use);

  return element;
}

function findFortify() {
  return fetch('https://127.0.0.1:31337/.well-known/webcrypto-socket').then(function (res) {
    return res.status === 200;
  }).catch(function (err) {
    return false;
  });
}

function defineMyCertificates() {
  var link = document.getElementById('certificates_link');

  if (link) {
    findFortify().then(function (fortifyEnabled) {
      if (fortifyEnabled) {
        link.classList.remove('m_hidden');
      } else {
        link.classList.add('m_hidden');
      }
    });
  }
}

function listenFortify() {
  defineMyCertificates();
  setTimeout(listenFortify, FORTIFY_POOLING_DELAY);
}

function getCardsData() {
  var pathname = '/';
  if (/github\.io/.test(window.location.host)) {
    pahname = window.location.pathname;
  }
  return fetch(pathname + 'media/cards.json').then(function (res) {
    return res.json();
  });
}

function prepareTableData(data) {
  if (!data) {
    return false;
  }
  return data.cards.map(function (card) {
    var driver = data.drivers.filter(function (driver) {
      return driver.id === card.driver;
    })[0];

    if (driver) {
      return {
        name: card.name,
        mac: !!(driver.file && driver.file.osx),
        win: !!(driver.file && driver.file.windows)
      };
    }
    return {
      name: card.name,
      mac: false,
      win: false
    };
  });
}

function insertTableData(data) {
  var tableContainer = document.getElementById('question-2');

  var okData = {
    id: 'svg-checkmark',
    viewBox: '0 0 21 16',
    className: 'icon_ok'
  };

  var xData = {
    id: 'svg-cross',
    viewBox: '0 0 15 16',
    className: 'icon_x'
  };

  if (tableContainer && tableContainer.children[1]) {
    var container = createElement('div', 'table_container m_hidden');
    var btnHTMLOpen = 'Click to show smart cards that are currently supported <svg class="toggle_arrow" viewBox="0 0 8 5">\n        <path fill-rule="evenodd" d="M6.766566 1.710775l-2.53553 2.53553c-.390527.390527-1.023692.39052-1.414213 0L.281286 1.710766c-.390523-.390524-.390528-1.023686 0-1.414214C.468818.109023.723176.00366.98839.003666L6.05946.003663c.552285-.000007 1.000004.447712.999997.999998 0 .265223-.105352.519576-.29289.707115z"/>\n      </svg>';
    var btnHTMLClose = 'Collapse table <svg class="toggle_arrow" viewBox="0 0 8 5">\n        <path fill-rule="evenodd" d="M6.766566 1.710775l-2.53553 2.53553c-.390527.390527-1.023692.39052-1.414213 0L.281286 1.710766c-.390523-.390524-.390528-1.023686 0-1.414214C.468818.109023.723176.00366.98839.003666L6.05946.003663c.552285-.000007 1.000004.447712.999997.999998 0 .265223-.105352.519576-.29289.707115z"/>\n      </svg>';
    var button = createElement('div', 'toggle_button', null, btnHTMLOpen, {
      onclick: function onclick(e) {
        if (container.classList.value.indexOf('m_hidden') === -1) {
          button.innerHTML = btnHTMLOpen;
        } else {
          button.innerHTML = btnHTMLClose;
        }
        container.classList.toggle('m_hidden');
        e.target.classList.toggle('m_hide');
      }
    });
    var table = createElement('table', 'cards_table');
    container.appendChild(table);
    var head = createElement('thead');
    [createElement('th', 'cards_cell m_head', null, 'Card'), createElement('th', 'cards_cell m_head', null, 'Mac OS'), createElement('th', 'cards_cell m_head', null, 'Windows')].forEach(function (el) {
      return head.appendChild(el);
    });

    var body = createElement('tbody');
    data.forEach(function (card) {
      var row = createElement('tr');
      row.appendChild(createElement('td', 'cards_cell', null, card.name));
      row.appendChild(createElement('td', 'cards_cell m_status', null, createSVG(card.mac ? okData : xData)));
      row.appendChild(createElement('td', 'cards_cell m_status', null, createSVG(card.win ? okData : xData)));
      body.appendChild(row);
    });

    table.appendChild(head);
    table.appendChild(body);

    tableContainer.children[1].appendChild(container);
    tableContainer.children[1].appendChild(button);
  }
}

function getFAQData() {
  var pathname = '/';
  if (/github\.io/.test(window.location.host)) {
    pahname = window.location.pathname;
  }
  return fetch(pathname + 'media/faq.json').then(function (res) {
    return res.json();
  });
}

function insertFAQData(data) {
  var tableContainer = document.getElementById('faq_table');

  if (data && Array.isArray(data.questions)) {
    data.questions.forEach(function (pair) {
      var row = createElement('tr', 'row', 'question-' + pair.id);
      var question = createElement('td', 'cell m_question', null, pair.question);
      var answer = createElement('td', 'cell', null, pair.answer.replace(/\n/g, '<br>'));

      row.appendChild(question);
      row.appendChild(answer);

      tableContainer.appendChild(row);
    });
  }
}

function showAll() {
  document.getElementById('download_mac').classList.remove('m_hidden', 'm_full_width');
  document.getElementById('download_64').classList.remove('m_hidden', 'm_full_width');
  document.getElementById('download_86').classList.remove('m_hidden', 'm_full_width');
  document.getElementById('show_all').classList.add('m_hidden');
}

function detectOS() {
  var platform = navigator.platform;
  var userAgent = navigator.userAgent;
  var downloadMac = document.getElementById('download_mac');
  var download32 = document.getElementById('download_86');
  var download64 = document.getElementById('download_64');
  var showBtn = document.getElementById('show_all');

  if (platform.indexOf('Mac') !== -1) {
    download32.classList.add('m_hidden');
    download64.classList.add('m_hidden');
    downloadMac.classList.add('m_full_width');
    showBtn.classList.remove('m_hidden');
  } else if (platform.indexOf('Win') !== -1 && (userAgent.indexOf('WOW64') !== -1 || userAgent.indexOf('Win64') !== -1)) {

    download32.classList.add('m_hidden');
    downloadMac.classList.add('m_hidden');
    download64.classList.add('m_full_width');
    showBtn.classList.remove('m_hidden');
  } else if (platform.indexOf('Win') !== -1) {

    downloadMac.classList.add('m_hidden');
    download64.classList.add('m_hidden');
    download32.classList.add('m_full_width');
    showBtn.classList.remove('m_hidden');
  }

  showBtn.addEventListener('click', showAll, false);
}

detectOS();
(0, _slider2.default)();
listenFortify();
var cards = getCardsData().then(prepareTableData);
var FAQ = getFAQData().then(insertFAQData);

Promise.all([FAQ, cards]).then(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      faq = _ref2[0],
      cardsData = _ref2[1];

  return insertTableData(cardsData);
}).catch(function (err) {
  console.warn(err);
});

},{"./slider":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = initSlider;

require('./swiper.custom.min');

function initSlider() {
  var swiper = new Swiper('.b_slider', {
    pagination: '.pagination',
    paginationClickable: true,
    autoplay: 2000,
    autoHeight: true,
    effect: 'fade',
    loop: true,
    speed: 300
  });

  var sliderContainer = document.getElementsByClassName('swiper-wrapper')[0];
  if (sliderContainer) {
    sliderContainer.addEventListener('click', function () {
      return swiper.slideNext();
    }, true);
  }

  return swiper;
}

},{"./swiper.custom.min":3}],3:[function(require,module,exports){
"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Swiper 3.4.2 - Custom Build
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * 
 * Included modules: effects
 * 
 * http://www.idangero.us/swiper/
 * 
 * Copyright 2017, Vladimir Kharlampidi
 * The iDangero.us
 * http://www.idangero.us/
 * 
 * Licensed under MIT
 * 
 * Released on: August 25, 2017
 */
!function () {
  "use strict";
  var e,
      a = function a(s, i) {
    function r(e) {
      return Math.floor(e);
    }function n() {
      var e = v.params.autoplay,
          a = v.slides.eq(v.activeIndex);a.attr("data-swiper-autoplay") && (e = a.attr("data-swiper-autoplay") || v.params.autoplay), v.autoplayTimeoutId = setTimeout(function () {
        v.params.loop ? (v.fixLoop(), v._slideNext(), v.emit("onAutoplay", v)) : v.isEnd ? i.autoplayStopOnLast ? v.stopAutoplay() : (v._slideTo(0), v.emit("onAutoplay", v)) : (v._slideNext(), v.emit("onAutoplay", v));
      }, e);
    }function o(a, t) {
      var s = e(a.target);if (!s.is(t)) if ("string" == typeof t) s = s.parents(t);else if (t.nodeType) {
        var i;return s.parents().each(function (e, a) {
          a === t && (i = t);
        }), i ? t : void 0;
      }if (0 !== s.length) return s[0];
    }function l(e, a) {
      a = a || {};var t = window.MutationObserver || window.WebkitMutationObserver,
          s = new t(function (e) {
        e.forEach(function (e) {
          v.onResize(!0), v.emit("onObserverUpdate", v, e);
        });
      });s.observe(e, { attributes: void 0 === a.attributes || a.attributes, childList: void 0 === a.childList || a.childList, characterData: void 0 === a.characterData || a.characterData }), v.observers.push(s);
    }function p(e) {
      return 0 !== e.indexOf("on") && (e = e[0] !== e[0].toUpperCase() ? "on" + e[0].toUpperCase() + e.substring(1) : "on" + e), e;
    }if (!(this instanceof a)) return new a(s, i);var d = { direction: "horizontal", touchEventsTarget: "container", initialSlide: 0, speed: 300, autoplay: !1, autoplayDisableOnInteraction: !0, autoplayStopOnLast: !1, iOSEdgeSwipeDetection: !1, iOSEdgeSwipeThreshold: 20, freeMode: !1, freeModeMomentum: !0, freeModeMomentumRatio: 1, freeModeMomentumBounce: !0, freeModeMomentumBounceRatio: 1, freeModeMomentumVelocityRatio: 1, freeModeSticky: !1, freeModeMinimumVelocity: .02, autoHeight: !1, setWrapperSize: !1, virtualTranslate: !1, effect: "slide", coverflow: { rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: !0 }, flip: { slideShadows: !0, limitRotation: !0 }, cube: { slideShadows: !0, shadow: !0, shadowOffset: 20, shadowScale: .94 }, fade: { crossFade: !1 }, parallax: !1, zoom: !1, zoomMax: 3, zoomMin: 1, zoomToggle: !0, scrollbar: null, scrollbarHide: !0, scrollbarDraggable: !1, scrollbarSnapOnRelease: !1, keyboardControl: !1, mousewheelControl: !1, mousewheelReleaseOnEdges: !1, mousewheelInvert: !1, mousewheelForceToAxis: !1, mousewheelSensitivity: 1, mousewheelEventsTarged: "container", hashnav: !1, hashnavWatchState: !1, history: !1, replaceState: !1, breakpoints: void 0, spaceBetween: 0, slidesPerView: 1, slidesPerColumn: 1, slidesPerColumnFill: "column", slidesPerGroup: 1, centeredSlides: !1, slidesOffsetBefore: 0, slidesOffsetAfter: 0, roundLengths: !1, touchRatio: 1, touchAngle: 45, simulateTouch: !0, shortSwipes: !0, longSwipes: !0, longSwipesRatio: .5, longSwipesMs: 300, followFinger: !0, onlyExternal: !1, threshold: 0, touchMoveStopPropagation: !0, touchReleaseOnEdges: !1, uniqueNavElements: !0, pagination: null, paginationElement: "span", paginationClickable: !1, paginationHide: !1, paginationBulletRender: null, paginationProgressRender: null, paginationFractionRender: null, paginationCustomRender: null, paginationType: "bullets", fitSlideGroupWithBlank: !1, blankClass: "swiper-invisible-blank-slide", resistance: !0, resistanceRatio: .85, nextButton: null, prevButton: null, watchSlidesProgress: !1, watchSlidesVisibility: !1, grabCursor: !1, preventClicks: !0, preventClicksPropagation: !0, slideToClickedSlide: !1, lazyLoading: !1, lazyLoadingInPrevNext: !1, lazyLoadingInPrevNextAmount: 1, lazyLoadingOnTransitionStart: !1, preloadImages: !0, updateOnImagesReady: !0, loop: !1, loopAdditionalSlides: 0, loopedSlides: null, control: void 0, controlInverse: !1, controlBy: "slide", normalizeSlideIndex: !0, allowSwipeToPrev: !0, allowSwipeToNext: !0, swipeHandler: null, noSwiping: !0, noSwipingClass: "swiper-no-swiping", passiveListeners: !0, containerModifierClass: "swiper-container-", slideClass: "swiper-slide", slideActiveClass: "swiper-slide-active", slideDuplicateActiveClass: "swiper-slide-duplicate-active", slideVisibleClass: "swiper-slide-visible", slideDuplicateClass: "swiper-slide-duplicate", slideNextClass: "swiper-slide-next", slideDuplicateNextClass: "swiper-slide-duplicate-next", slidePrevClass: "swiper-slide-prev", slideDuplicatePrevClass: "swiper-slide-duplicate-prev", wrapperClass: "swiper-wrapper", bulletClass: "swiper-pagination-bullet", bulletActiveClass: "swiper-pagination-bullet-active", buttonDisabledClass: "swiper-button-disabled", paginationCurrentClass: "swiper-pagination-current", paginationTotalClass: "swiper-pagination-total", paginationHiddenClass: "swiper-pagination-hidden", paginationProgressbarClass: "swiper-pagination-progressbar", paginationClickableClass: "swiper-pagination-clickable", paginationModifierClass: "swiper-pagination-", lazyLoadingClass: "swiper-lazy", lazyStatusLoadingClass: "swiper-lazy-loading", lazyStatusLoadedClass: "swiper-lazy-loaded", lazyPreloaderClass: "swiper-lazy-preloader", notificationClass: "swiper-notification", preloaderClass: "preloader", zoomContainerClass: "swiper-zoom-container", observer: !1, observeParents: !1, a11y: !1, prevSlideMessage: "Previous slide", nextSlideMessage: "Next slide", firstSlideMessage: "This is the first slide", lastSlideMessage: "This is the last slide", paginationBulletMessage: "Go to slide {{index}}", runCallbacksOnInit: !0 },
        u = i && i.virtualTranslate;i = i || {};var c = {};for (var m in i) {
      if ("object" != _typeof(i[m]) || null === i[m] || i[m].nodeType || i[m] === window || i[m] === document || void 0 !== t && i[m] instanceof t || "undefined" != typeof jQuery && i[m] instanceof jQuery) c[m] = i[m];else {
        c[m] = {};for (var h in i[m]) {
          c[m][h] = i[m][h];
        }
      }
    }for (var f in d) {
      if (void 0 === i[f]) i[f] = d[f];else if ("object" == _typeof(i[f])) for (var g in d[f]) {
        void 0 === i[f][g] && (i[f][g] = d[f][g]);
      }
    }var v = this;if (v.params = i, v.originalParams = c, v.classNames = [], void 0 !== e && void 0 !== t && (e = t), (void 0 !== e || (e = void 0 === t ? window.Dom7 || window.Zepto || window.jQuery : t)) && (v.$ = e, v.currentBreakpoint = void 0, v.getActiveBreakpoint = function () {
      if (!v.params.breakpoints) return !1;var e,
          a = !1,
          t = [];for (e in v.params.breakpoints) {
        v.params.breakpoints.hasOwnProperty(e) && t.push(e);
      }t.sort(function (e, a) {
        return parseInt(e, 10) > parseInt(a, 10);
      });for (var s = 0; s < t.length; s++) {
        (e = t[s]) >= window.innerWidth && !a && (a = e);
      }return a || "max";
    }, v.setBreakpoint = function () {
      var e = v.getActiveBreakpoint();if (e && v.currentBreakpoint !== e) {
        var a = e in v.params.breakpoints ? v.params.breakpoints[e] : v.originalParams,
            t = v.params.loop && a.slidesPerView !== v.params.slidesPerView;for (var s in a) {
          v.params[s] = a[s];
        }v.currentBreakpoint = e, t && v.destroyLoop && v.reLoop(!0);
      }
    }, v.params.breakpoints && v.setBreakpoint(), v.container = e(s), 0 !== v.container.length)) {
      if (v.container.length > 1) {
        var w = [];return v.container.each(function () {
          w.push(new a(this, i));
        }), w;
      }v.container[0].swiper = v, v.container.data("swiper", v), v.classNames.push(v.params.containerModifierClass + v.params.direction), v.params.freeMode && v.classNames.push(v.params.containerModifierClass + "free-mode"), v.support.flexbox || (v.classNames.push(v.params.containerModifierClass + "no-flexbox"), v.params.slidesPerColumn = 1), v.params.autoHeight && v.classNames.push(v.params.containerModifierClass + "autoheight"), (v.params.parallax || v.params.watchSlidesVisibility) && (v.params.watchSlidesProgress = !0), v.params.touchReleaseOnEdges && (v.params.resistanceRatio = 0), ["cube", "coverflow", "flip"].indexOf(v.params.effect) >= 0 && (v.support.transforms3d ? (v.params.watchSlidesProgress = !0, v.classNames.push(v.params.containerModifierClass + "3d")) : v.params.effect = "slide"), "slide" !== v.params.effect && v.classNames.push(v.params.containerModifierClass + v.params.effect), "cube" === v.params.effect && (v.params.resistanceRatio = 0, v.params.slidesPerView = 1, v.params.slidesPerColumn = 1, v.params.slidesPerGroup = 1, v.params.centeredSlides = !1, v.params.spaceBetween = 0, v.params.virtualTranslate = !0), "fade" !== v.params.effect && "flip" !== v.params.effect || (v.params.slidesPerView = 1, v.params.slidesPerColumn = 1, v.params.slidesPerGroup = 1, v.params.watchSlidesProgress = !0, v.params.spaceBetween = 0, void 0 === u && (v.params.virtualTranslate = !0)), v.params.grabCursor && v.support.touch && (v.params.grabCursor = !1), v.wrapper = v.container.children("." + v.params.wrapperClass), v.params.pagination && (v.paginationContainer = e(v.params.pagination), v.params.uniqueNavElements && "string" == typeof v.params.pagination && v.paginationContainer.length > 1 && 1 === v.container.find(v.params.pagination).length && (v.paginationContainer = v.container.find(v.params.pagination)), "bullets" === v.params.paginationType && v.params.paginationClickable ? v.paginationContainer.addClass(v.params.paginationClickableClass) : v.params.paginationClickable = !1, v.paginationContainer.addClass(v.params.paginationModifierClass + v.params.paginationType)), (v.params.nextButton || v.params.prevButton) && (v.params.nextButton && (v.nextButton = e(v.params.nextButton), v.params.uniqueNavElements && "string" == typeof v.params.nextButton && v.nextButton.length > 1 && 1 === v.container.find(v.params.nextButton).length && (v.nextButton = v.container.find(v.params.nextButton))), v.params.prevButton && (v.prevButton = e(v.params.prevButton), v.params.uniqueNavElements && "string" == typeof v.params.prevButton && v.prevButton.length > 1 && 1 === v.container.find(v.params.prevButton).length && (v.prevButton = v.container.find(v.params.prevButton)))), v.isHorizontal = function () {
        return "horizontal" === v.params.direction;
      }, v.rtl = v.isHorizontal() && ("rtl" === v.container[0].dir.toLowerCase() || "rtl" === v.container.css("direction")), v.rtl && v.classNames.push(v.params.containerModifierClass + "rtl"), v.rtl && (v.wrongRTL = "-webkit-box" === v.wrapper.css("display")), v.params.slidesPerColumn > 1 && v.classNames.push(v.params.containerModifierClass + "multirow"), v.device.android && v.classNames.push(v.params.containerModifierClass + "android"), v.container.addClass(v.classNames.join(" ")), v.translate = 0, v.progress = 0, v.velocity = 0, v.lockSwipeToNext = function () {
        v.params.allowSwipeToNext = !1, !1 === v.params.allowSwipeToPrev && v.params.grabCursor && v.unsetGrabCursor();
      }, v.lockSwipeToPrev = function () {
        v.params.allowSwipeToPrev = !1, !1 === v.params.allowSwipeToNext && v.params.grabCursor && v.unsetGrabCursor();
      }, v.lockSwipes = function () {
        v.params.allowSwipeToNext = v.params.allowSwipeToPrev = !1, v.params.grabCursor && v.unsetGrabCursor();
      }, v.unlockSwipeToNext = function () {
        v.params.allowSwipeToNext = !0, !0 === v.params.allowSwipeToPrev && v.params.grabCursor && v.setGrabCursor();
      }, v.unlockSwipeToPrev = function () {
        v.params.allowSwipeToPrev = !0, !0 === v.params.allowSwipeToNext && v.params.grabCursor && v.setGrabCursor();
      }, v.unlockSwipes = function () {
        v.params.allowSwipeToNext = v.params.allowSwipeToPrev = !0, v.params.grabCursor && v.setGrabCursor();
      }, v.setGrabCursor = function (e) {
        v.container[0].style.cursor = "move", v.container[0].style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", v.container[0].style.cursor = e ? "-moz-grabbin" : "-moz-grab", v.container[0].style.cursor = e ? "grabbing" : "grab";
      }, v.unsetGrabCursor = function () {
        v.container[0].style.cursor = "";
      }, v.params.grabCursor && v.setGrabCursor(), v.imagesToLoad = [], v.imagesLoaded = 0, v.loadImage = function (e, a, t, s, i, r) {
        function n() {
          r && r();
        }var o;e.complete && i ? n() : a ? (o = new window.Image(), o.onload = n, o.onerror = n, s && (o.sizes = s), t && (o.srcset = t), a && (o.src = a)) : n();
      }, v.preloadImages = function () {
        function e() {
          void 0 !== v && null !== v && v && (void 0 !== v.imagesLoaded && v.imagesLoaded++, v.imagesLoaded === v.imagesToLoad.length && (v.params.updateOnImagesReady && v.update(), v.emit("onImagesReady", v)));
        }v.imagesToLoad = v.container.find("img");for (var a = 0; a < v.imagesToLoad.length; a++) {
          v.loadImage(v.imagesToLoad[a], v.imagesToLoad[a].currentSrc || v.imagesToLoad[a].getAttribute("src"), v.imagesToLoad[a].srcset || v.imagesToLoad[a].getAttribute("srcset"), v.imagesToLoad[a].sizes || v.imagesToLoad[a].getAttribute("sizes"), !0, e);
        }
      }, v.autoplayTimeoutId = void 0, v.autoplaying = !1, v.autoplayPaused = !1, v.startAutoplay = function () {
        return void 0 === v.autoplayTimeoutId && !!v.params.autoplay && !v.autoplaying && (v.autoplaying = !0, v.emit("onAutoplayStart", v), void n());
      }, v.stopAutoplay = function (e) {
        v.autoplayTimeoutId && (v.autoplayTimeoutId && clearTimeout(v.autoplayTimeoutId), v.autoplaying = !1, v.autoplayTimeoutId = void 0, v.emit("onAutoplayStop", v));
      }, v.pauseAutoplay = function (e) {
        v.autoplayPaused || (v.autoplayTimeoutId && clearTimeout(v.autoplayTimeoutId), v.autoplayPaused = !0, 0 === e ? (v.autoplayPaused = !1, n()) : v.wrapper.transitionEnd(function () {
          v && (v.autoplayPaused = !1, v.autoplaying ? n() : v.stopAutoplay());
        }));
      }, v.minTranslate = function () {
        return -v.snapGrid[0];
      }, v.maxTranslate = function () {
        return -v.snapGrid[v.snapGrid.length - 1];
      }, v.updateAutoHeight = function () {
        var e,
            a = [],
            t = 0;if ("auto" !== v.params.slidesPerView && v.params.slidesPerView > 1) for (e = 0; e < Math.ceil(v.params.slidesPerView); e++) {
          var s = v.activeIndex + e;if (s > v.slides.length) break;a.push(v.slides.eq(s)[0]);
        } else a.push(v.slides.eq(v.activeIndex)[0]);for (e = 0; e < a.length; e++) {
          if (void 0 !== a[e]) {
            var i = a[e].offsetHeight;t = i > t ? i : t;
          }
        }t && v.wrapper.css("height", t + "px");
      }, v.updateContainerSize = function () {
        var e, a;e = void 0 !== v.params.width ? v.params.width : v.container[0].clientWidth, a = void 0 !== v.params.height ? v.params.height : v.container[0].clientHeight, 0 === e && v.isHorizontal() || 0 === a && !v.isHorizontal() || (e = e - parseInt(v.container.css("padding-left"), 10) - parseInt(v.container.css("padding-right"), 10), a = a - parseInt(v.container.css("padding-top"), 10) - parseInt(v.container.css("padding-bottom"), 10), v.width = e, v.height = a, v.size = v.isHorizontal() ? v.width : v.height);
      }, v.updateSlidesSize = function () {
        v.slides = v.wrapper.children("." + v.params.slideClass), v.snapGrid = [], v.slidesGrid = [], v.slidesSizesGrid = [];var e,
            a = v.params.spaceBetween,
            t = -v.params.slidesOffsetBefore,
            s = 0,
            i = 0;if (void 0 !== v.size) {
          "string" == typeof a && a.indexOf("%") >= 0 && (a = parseFloat(a.replace("%", "")) / 100 * v.size), v.virtualSize = -a, v.rtl ? v.slides.css({ marginLeft: "", marginTop: "" }) : v.slides.css({ marginRight: "", marginBottom: "" });var n;v.params.slidesPerColumn > 1 && (n = Math.floor(v.slides.length / v.params.slidesPerColumn) === v.slides.length / v.params.slidesPerColumn ? v.slides.length : Math.ceil(v.slides.length / v.params.slidesPerColumn) * v.params.slidesPerColumn, "auto" !== v.params.slidesPerView && "row" === v.params.slidesPerColumnFill && (n = Math.max(n, v.params.slidesPerView * v.params.slidesPerColumn)));var o,
              l = v.params.slidesPerColumn,
              p = n / l,
              d = p - (v.params.slidesPerColumn * p - v.slides.length);for (e = 0; e < v.slides.length; e++) {
            o = 0;var u = v.slides.eq(e);if (v.params.slidesPerColumn > 1) {
              var c, m, h;"column" === v.params.slidesPerColumnFill ? (m = Math.floor(e / l), h = e - m * l, (m > d || m === d && h === l - 1) && ++h >= l && (h = 0, m++), c = m + h * n / l, u.css({ "-webkit-box-ordinal-group": c, "-moz-box-ordinal-group": c, "-ms-flex-order": c, "-webkit-order": c, order: c })) : (h = Math.floor(e / p), m = e - h * p), u.css("margin-" + (v.isHorizontal() ? "top" : "left"), 0 !== h && v.params.spaceBetween && v.params.spaceBetween + "px").attr("data-swiper-column", m).attr("data-swiper-row", h);
            }"none" !== u.css("display") && ("auto" === v.params.slidesPerView ? (o = v.isHorizontal() ? u.outerWidth(!0) : u.outerHeight(!0), v.params.roundLengths && (o = r(o))) : (o = (v.size - (v.params.slidesPerView - 1) * a) / v.params.slidesPerView, v.params.roundLengths && (o = r(o)), v.isHorizontal() ? v.slides[e].style.width = o + "px" : v.slides[e].style.height = o + "px"), v.slides[e].swiperSlideSize = o, v.slidesSizesGrid.push(o), v.params.centeredSlides ? (t = t + o / 2 + s / 2 + a, 0 === s && 0 !== e && (t = t - v.size / 2 - a), 0 === e && (t = t - v.size / 2 - a), Math.abs(t) < .001 && (t = 0), i % v.params.slidesPerGroup == 0 && v.snapGrid.push(t), v.slidesGrid.push(t)) : (i % v.params.slidesPerGroup == 0 && v.snapGrid.push(t), v.slidesGrid.push(t), t = t + o + a), v.virtualSize += o + a, s = o, i++);
          }v.virtualSize = Math.max(v.virtualSize, v.size) + v.params.slidesOffsetAfter;var f;if (v.rtl && v.wrongRTL && ("slide" === v.params.effect || "coverflow" === v.params.effect) && v.wrapper.css({ width: v.virtualSize + v.params.spaceBetween + "px" }), v.support.flexbox && !v.params.setWrapperSize || (v.isHorizontal() ? v.wrapper.css({ width: v.virtualSize + v.params.spaceBetween + "px" }) : v.wrapper.css({ height: v.virtualSize + v.params.spaceBetween + "px" })), v.params.slidesPerColumn > 1 && (v.virtualSize = (o + v.params.spaceBetween) * n, v.virtualSize = Math.ceil(v.virtualSize / v.params.slidesPerColumn) - v.params.spaceBetween, v.isHorizontal() ? v.wrapper.css({ width: v.virtualSize + v.params.spaceBetween + "px" }) : v.wrapper.css({ height: v.virtualSize + v.params.spaceBetween + "px" }), v.params.centeredSlides)) {
            for (f = [], e = 0; e < v.snapGrid.length; e++) {
              v.snapGrid[e] < v.virtualSize + v.snapGrid[0] && f.push(v.snapGrid[e]);
            }v.snapGrid = f;
          }if (!v.params.centeredSlides) {
            for (f = [], e = 0; e < v.snapGrid.length; e++) {
              v.snapGrid[e] <= v.virtualSize - v.size && f.push(v.snapGrid[e]);
            }v.snapGrid = f, Math.floor(v.virtualSize - v.size) - Math.floor(v.snapGrid[v.snapGrid.length - 1]) > 1 && v.snapGrid.push(v.virtualSize - v.size);
          }0 === v.snapGrid.length && (v.snapGrid = [0]), 0 !== v.params.spaceBetween && (v.isHorizontal() ? v.rtl ? v.slides.css({ marginLeft: a + "px" }) : v.slides.css({ marginRight: a + "px" }) : v.slides.css({ marginBottom: a + "px" })), v.params.watchSlidesProgress && v.updateSlidesOffset();
        }
      }, v.updateSlidesOffset = function () {
        for (var e = 0; e < v.slides.length; e++) {
          v.slides[e].swiperSlideOffset = v.isHorizontal() ? v.slides[e].offsetLeft : v.slides[e].offsetTop;
        }
      }, v.currentSlidesPerView = function () {
        var e,
            a,
            t = 1;if (v.params.centeredSlides) {
          var s,
              i = v.slides[v.activeIndex].swiperSlideSize;for (e = v.activeIndex + 1; e < v.slides.length; e++) {
            v.slides[e] && !s && (i += v.slides[e].swiperSlideSize, t++, i > v.size && (s = !0));
          }for (a = v.activeIndex - 1; a >= 0; a--) {
            v.slides[a] && !s && (i += v.slides[a].swiperSlideSize, t++, i > v.size && (s = !0));
          }
        } else for (e = v.activeIndex + 1; e < v.slides.length; e++) {
          v.slidesGrid[e] - v.slidesGrid[v.activeIndex] < v.size && t++;
        }return t;
      }, v.updateSlidesProgress = function (e) {
        if (void 0 === e && (e = v.translate || 0), 0 !== v.slides.length) {
          void 0 === v.slides[0].swiperSlideOffset && v.updateSlidesOffset();var a = -e;v.rtl && (a = e), v.slides.removeClass(v.params.slideVisibleClass);for (var t = 0; t < v.slides.length; t++) {
            var s = v.slides[t],
                i = (a + (v.params.centeredSlides ? v.minTranslate() : 0) - s.swiperSlideOffset) / (s.swiperSlideSize + v.params.spaceBetween);if (v.params.watchSlidesVisibility) {
              var r = -(a - s.swiperSlideOffset),
                  n = r + v.slidesSizesGrid[t];(r >= 0 && r < v.size || n > 0 && n <= v.size || r <= 0 && n >= v.size) && v.slides.eq(t).addClass(v.params.slideVisibleClass);
            }s.progress = v.rtl ? -i : i;
          }
        }
      }, v.updateProgress = function (e) {
        void 0 === e && (e = v.translate || 0);var a = v.maxTranslate() - v.minTranslate(),
            t = v.isBeginning,
            s = v.isEnd;0 === a ? (v.progress = 0, v.isBeginning = v.isEnd = !0) : (v.progress = (e - v.minTranslate()) / a, v.isBeginning = v.progress <= 0, v.isEnd = v.progress >= 1), v.isBeginning && !t && v.emit("onReachBeginning", v), v.isEnd && !s && v.emit("onReachEnd", v), v.params.watchSlidesProgress && v.updateSlidesProgress(e), v.emit("onProgress", v, v.progress);
      }, v.updateActiveIndex = function () {
        var e,
            a,
            t,
            s = v.rtl ? v.translate : -v.translate;for (a = 0; a < v.slidesGrid.length; a++) {
          void 0 !== v.slidesGrid[a + 1] ? s >= v.slidesGrid[a] && s < v.slidesGrid[a + 1] - (v.slidesGrid[a + 1] - v.slidesGrid[a]) / 2 ? e = a : s >= v.slidesGrid[a] && s < v.slidesGrid[a + 1] && (e = a + 1) : s >= v.slidesGrid[a] && (e = a);
        }v.params.normalizeSlideIndex && (e < 0 || void 0 === e) && (e = 0), t = Math.floor(e / v.params.slidesPerGroup), t >= v.snapGrid.length && (t = v.snapGrid.length - 1), e !== v.activeIndex && (v.snapIndex = t, v.previousIndex = v.activeIndex, v.activeIndex = e, v.updateClasses(), v.updateRealIndex());
      }, v.updateRealIndex = function () {
        v.realIndex = parseInt(v.slides.eq(v.activeIndex).attr("data-swiper-slide-index") || v.activeIndex, 10);
      }, v.updateClasses = function () {
        v.slides.removeClass(v.params.slideActiveClass + " " + v.params.slideNextClass + " " + v.params.slidePrevClass + " " + v.params.slideDuplicateActiveClass + " " + v.params.slideDuplicateNextClass + " " + v.params.slideDuplicatePrevClass);var a = v.slides.eq(v.activeIndex);a.addClass(v.params.slideActiveClass), i.loop && (a.hasClass(v.params.slideDuplicateClass) ? v.wrapper.children("." + v.params.slideClass + ":not(." + v.params.slideDuplicateClass + ')[data-swiper-slide-index="' + v.realIndex + '"]').addClass(v.params.slideDuplicateActiveClass) : v.wrapper.children("." + v.params.slideClass + "." + v.params.slideDuplicateClass + '[data-swiper-slide-index="' + v.realIndex + '"]').addClass(v.params.slideDuplicateActiveClass));var t = a.next("." + v.params.slideClass).addClass(v.params.slideNextClass);v.params.loop && 0 === t.length && (t = v.slides.eq(0), t.addClass(v.params.slideNextClass));var s = a.prev("." + v.params.slideClass).addClass(v.params.slidePrevClass);if (v.params.loop && 0 === s.length && (s = v.slides.eq(-1), s.addClass(v.params.slidePrevClass)), i.loop && (t.hasClass(v.params.slideDuplicateClass) ? v.wrapper.children("." + v.params.slideClass + ":not(." + v.params.slideDuplicateClass + ')[data-swiper-slide-index="' + t.attr("data-swiper-slide-index") + '"]').addClass(v.params.slideDuplicateNextClass) : v.wrapper.children("." + v.params.slideClass + "." + v.params.slideDuplicateClass + '[data-swiper-slide-index="' + t.attr("data-swiper-slide-index") + '"]').addClass(v.params.slideDuplicateNextClass), s.hasClass(v.params.slideDuplicateClass) ? v.wrapper.children("." + v.params.slideClass + ":not(." + v.params.slideDuplicateClass + ')[data-swiper-slide-index="' + s.attr("data-swiper-slide-index") + '"]').addClass(v.params.slideDuplicatePrevClass) : v.wrapper.children("." + v.params.slideClass + "." + v.params.slideDuplicateClass + '[data-swiper-slide-index="' + s.attr("data-swiper-slide-index") + '"]').addClass(v.params.slideDuplicatePrevClass)), v.paginationContainer && v.paginationContainer.length > 0) {
          var r,
              n = v.params.loop ? Math.ceil((v.slides.length - 2 * v.loopedSlides) / v.params.slidesPerGroup) : v.snapGrid.length;if (v.params.loop ? (r = Math.ceil((v.activeIndex - v.loopedSlides) / v.params.slidesPerGroup), r > v.slides.length - 1 - 2 * v.loopedSlides && (r -= v.slides.length - 2 * v.loopedSlides), r > n - 1 && (r -= n), r < 0 && "bullets" !== v.params.paginationType && (r = n + r)) : r = void 0 !== v.snapIndex ? v.snapIndex : v.activeIndex || 0, "bullets" === v.params.paginationType && v.bullets && v.bullets.length > 0 && (v.bullets.removeClass(v.params.bulletActiveClass), v.paginationContainer.length > 1 ? v.bullets.each(function () {
            e(this).index() === r && e(this).addClass(v.params.bulletActiveClass);
          }) : v.bullets.eq(r).addClass(v.params.bulletActiveClass)), "fraction" === v.params.paginationType && (v.paginationContainer.find("." + v.params.paginationCurrentClass).text(r + 1), v.paginationContainer.find("." + v.params.paginationTotalClass).text(n)), "progress" === v.params.paginationType) {
            var o = (r + 1) / n,
                l = o,
                p = 1;v.isHorizontal() || (p = o, l = 1), v.paginationContainer.find("." + v.params.paginationProgressbarClass).transform("translate3d(0,0,0) scaleX(" + l + ") scaleY(" + p + ")").transition(v.params.speed);
          }"custom" === v.params.paginationType && v.params.paginationCustomRender && (v.paginationContainer.html(v.params.paginationCustomRender(v, r + 1, n)), v.emit("onPaginationRendered", v, v.paginationContainer[0]));
        }v.params.loop || (v.params.prevButton && v.prevButton && v.prevButton.length > 0 && (v.isBeginning ? (v.prevButton.addClass(v.params.buttonDisabledClass), v.params.a11y && v.a11y && v.a11y.disable(v.prevButton)) : (v.prevButton.removeClass(v.params.buttonDisabledClass), v.params.a11y && v.a11y && v.a11y.enable(v.prevButton))), v.params.nextButton && v.nextButton && v.nextButton.length > 0 && (v.isEnd ? (v.nextButton.addClass(v.params.buttonDisabledClass), v.params.a11y && v.a11y && v.a11y.disable(v.nextButton)) : (v.nextButton.removeClass(v.params.buttonDisabledClass), v.params.a11y && v.a11y && v.a11y.enable(v.nextButton))));
      }, v.updatePagination = function () {
        if (v.params.pagination && v.paginationContainer && v.paginationContainer.length > 0) {
          var e = "";if ("bullets" === v.params.paginationType) {
            for (var a = v.params.loop ? Math.ceil((v.slides.length - 2 * v.loopedSlides) / v.params.slidesPerGroup) : v.snapGrid.length, t = 0; t < a; t++) {
              v.params.paginationBulletRender ? e += v.params.paginationBulletRender(v, t, v.params.bulletClass) : e += "<" + v.params.paginationElement + ' class="' + v.params.bulletClass + '"></' + v.params.paginationElement + ">";
            }v.paginationContainer.html(e), v.bullets = v.paginationContainer.find("." + v.params.bulletClass), v.params.paginationClickable && v.params.a11y && v.a11y && v.a11y.initPagination();
          }"fraction" === v.params.paginationType && (e = v.params.paginationFractionRender ? v.params.paginationFractionRender(v, v.params.paginationCurrentClass, v.params.paginationTotalClass) : '<span class="' + v.params.paginationCurrentClass + '"></span> / <span class="' + v.params.paginationTotalClass + '"></span>', v.paginationContainer.html(e)), "progress" === v.params.paginationType && (e = v.params.paginationProgressRender ? v.params.paginationProgressRender(v, v.params.paginationProgressbarClass) : '<span class="' + v.params.paginationProgressbarClass + '"></span>', v.paginationContainer.html(e)), "custom" !== v.params.paginationType && v.emit("onPaginationRendered", v, v.paginationContainer[0]);
        }
      }, v.update = function (e) {
        function a() {
          v.rtl, v.translate;t = Math.min(Math.max(v.translate, v.maxTranslate()), v.minTranslate()), v.setWrapperTranslate(t), v.updateActiveIndex(), v.updateClasses();
        }if (v) {
          v.updateContainerSize(), v.updateSlidesSize(), v.updateProgress(), v.updatePagination(), v.updateClasses(), v.params.scrollbar && v.scrollbar && v.scrollbar.set();var t;if (e) {
            v.controller && v.controller.spline && (v.controller.spline = void 0), v.params.freeMode ? (a(), v.params.autoHeight && v.updateAutoHeight()) : (("auto" === v.params.slidesPerView || v.params.slidesPerView > 1) && v.isEnd && !v.params.centeredSlides ? v.slideTo(v.slides.length - 1, 0, !1, !0) : v.slideTo(v.activeIndex, 0, !1, !0)) || a();
          } else v.params.autoHeight && v.updateAutoHeight();
        }
      }, v.onResize = function (e) {
        if (!v.container[0] || 0 !== v.container[0].offsetWidth) {
          v.params.onBeforeResize && v.params.onBeforeResize(v), v.params.breakpoints && v.setBreakpoint();var a = v.params.allowSwipeToPrev,
              t = v.params.allowSwipeToNext;v.params.allowSwipeToPrev = v.params.allowSwipeToNext = !0, v.updateContainerSize(), v.updateSlidesSize(), ("auto" === v.params.slidesPerView || v.params.freeMode || e) && v.updatePagination(), v.params.scrollbar && v.scrollbar && v.scrollbar.set(), v.controller && v.controller.spline && (v.controller.spline = void 0);var s = !1;if (v.params.freeMode) {
            var i = Math.min(Math.max(v.translate, v.maxTranslate()), v.minTranslate());v.setWrapperTranslate(i), v.updateActiveIndex(), v.updateClasses(), v.params.autoHeight && v.updateAutoHeight();
          } else v.updateClasses(), s = ("auto" === v.params.slidesPerView || v.params.slidesPerView > 1) && v.isEnd && !v.params.centeredSlides ? v.slideTo(v.slides.length - 1, 0, !1, !0) : v.slideTo(v.activeIndex, 0, !1, !0);v.params.lazyLoading && !s && v.lazy && v.lazy.load(), v.params.allowSwipeToPrev = a, v.params.allowSwipeToNext = t, v.params.onAfterResize && v.params.onAfterResize(v);
        }
      }, v.touchEventsDesktop = { start: "mousedown", move: "mousemove", end: "mouseup" }, window.navigator.pointerEnabled ? v.touchEventsDesktop = { start: "pointerdown", move: "pointermove", end: "pointerup" } : window.navigator.msPointerEnabled && (v.touchEventsDesktop = { start: "MSPointerDown", move: "MSPointerMove", end: "MSPointerUp" }), v.touchEvents = { start: v.support.touch || !v.params.simulateTouch ? "touchstart" : v.touchEventsDesktop.start, move: v.support.touch || !v.params.simulateTouch ? "touchmove" : v.touchEventsDesktop.move, end: v.support.touch || !v.params.simulateTouch ? "touchend" : v.touchEventsDesktop.end }, (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) && ("container" === v.params.touchEventsTarget ? v.container : v.wrapper).addClass(v.params.containerModifierClass + "wp8-" + v.params.direction), v.initEvents = function (e) {
        var a = e ? "off" : "on",
            t = e ? "removeEventListener" : "addEventListener",
            s = "container" === v.params.touchEventsTarget ? v.container[0] : v.wrapper[0],
            r = v.support.touch ? s : document,
            n = !!v.params.nested;if (v.browser.ie) s[t](v.touchEvents.start, v.onTouchStart, !1), r[t](v.touchEvents.move, v.onTouchMove, n), r[t](v.touchEvents.end, v.onTouchEnd, !1);else {
          if (v.support.touch) {
            var o = !("touchstart" !== v.touchEvents.start || !v.support.passiveListener || !v.params.passiveListeners) && { passive: !0, capture: !1 };s[t](v.touchEvents.start, v.onTouchStart, o), s[t](v.touchEvents.move, v.onTouchMove, n), s[t](v.touchEvents.end, v.onTouchEnd, o);
          }(i.simulateTouch && !v.device.ios && !v.device.android || i.simulateTouch && !v.support.touch && v.device.ios) && (s[t]("mousedown", v.onTouchStart, !1), document[t]("mousemove", v.onTouchMove, n), document[t]("mouseup", v.onTouchEnd, !1));
        }window[t]("resize", v.onResize), v.params.nextButton && v.nextButton && v.nextButton.length > 0 && (v.nextButton[a]("click", v.onClickNext), v.params.a11y && v.a11y && v.nextButton[a]("keydown", v.a11y.onEnterKey)), v.params.prevButton && v.prevButton && v.prevButton.length > 0 && (v.prevButton[a]("click", v.onClickPrev), v.params.a11y && v.a11y && v.prevButton[a]("keydown", v.a11y.onEnterKey)), v.params.pagination && v.params.paginationClickable && (v.paginationContainer[a]("click", "." + v.params.bulletClass, v.onClickIndex), v.params.a11y && v.a11y && v.paginationContainer[a]("keydown", "." + v.params.bulletClass, v.a11y.onEnterKey)), (v.params.preventClicks || v.params.preventClicksPropagation) && s[t]("click", v.preventClicks, !0);
      }, v.attachEvents = function () {
        v.initEvents();
      }, v.detachEvents = function () {
        v.initEvents(!0);
      }, v.allowClick = !0, v.preventClicks = function (e) {
        v.allowClick || (v.params.preventClicks && e.preventDefault(), v.params.preventClicksPropagation && v.animating && (e.stopPropagation(), e.stopImmediatePropagation()));
      }, v.onClickNext = function (e) {
        e.preventDefault(), v.isEnd && !v.params.loop || v.slideNext();
      }, v.onClickPrev = function (e) {
        e.preventDefault(), v.isBeginning && !v.params.loop || v.slidePrev();
      }, v.onClickIndex = function (a) {
        a.preventDefault();var t = e(this).index() * v.params.slidesPerGroup;v.params.loop && (t += v.loopedSlides), v.slideTo(t);
      }, v.updateClickedSlide = function (a) {
        var t = o(a, "." + v.params.slideClass),
            s = !1;if (t) for (var i = 0; i < v.slides.length; i++) {
          v.slides[i] === t && (s = !0);
        }if (!t || !s) return v.clickedSlide = void 0, void (v.clickedIndex = void 0);if (v.clickedSlide = t, v.clickedIndex = e(t).index(), v.params.slideToClickedSlide && void 0 !== v.clickedIndex && v.clickedIndex !== v.activeIndex) {
          var r,
              n = v.clickedIndex,
              l = "auto" === v.params.slidesPerView ? v.currentSlidesPerView() : v.params.slidesPerView;if (v.params.loop) {
            if (v.animating) return;r = parseInt(e(v.clickedSlide).attr("data-swiper-slide-index"), 10), v.params.centeredSlides ? n < v.loopedSlides - l / 2 || n > v.slides.length - v.loopedSlides + l / 2 ? (v.fixLoop(), n = v.wrapper.children("." + v.params.slideClass + '[data-swiper-slide-index="' + r + '"]:not(.' + v.params.slideDuplicateClass + ")").eq(0).index(), setTimeout(function () {
              v.slideTo(n);
            }, 0)) : v.slideTo(n) : n > v.slides.length - l ? (v.fixLoop(), n = v.wrapper.children("." + v.params.slideClass + '[data-swiper-slide-index="' + r + '"]:not(.' + v.params.slideDuplicateClass + ")").eq(0).index(), setTimeout(function () {
              v.slideTo(n);
            }, 0)) : v.slideTo(n);
          } else v.slideTo(n);
        }
      };var b,
          x,
          T,
          C,
          S,
          y,
          M,
          z,
          P,
          E,
          I = "input, select, textarea, button, video",
          k = Date.now(),
          L = [];v.animating = !1, v.touches = { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 };var B, D;v.onTouchStart = function (a) {
        if (a.originalEvent && (a = a.originalEvent), (B = "touchstart" === a.type) || !("which" in a) || 3 !== a.which) {
          if (v.params.noSwiping && o(a, "." + v.params.noSwipingClass)) return void (v.allowClick = !0);if (!v.params.swipeHandler || o(a, v.params.swipeHandler)) {
            var t = v.touches.currentX = "touchstart" === a.type ? a.targetTouches[0].pageX : a.pageX,
                s = v.touches.currentY = "touchstart" === a.type ? a.targetTouches[0].pageY : a.pageY;if (!(v.device.ios && v.params.iOSEdgeSwipeDetection && t <= v.params.iOSEdgeSwipeThreshold)) {
              if (b = !0, x = !1, T = !0, S = void 0, D = void 0, v.touches.startX = t, v.touches.startY = s, C = Date.now(), v.allowClick = !0, v.updateContainerSize(), v.swipeDirection = void 0, v.params.threshold > 0 && (z = !1), "touchstart" !== a.type) {
                var i = !0;e(a.target).is(I) && (i = !1), document.activeElement && e(document.activeElement).is(I) && document.activeElement.blur(), i && a.preventDefault();
              }v.emit("onTouchStart", v, a);
            }
          }
        }
      }, v.onTouchMove = function (a) {
        if (a.originalEvent && (a = a.originalEvent), !B || "mousemove" !== a.type) {
          if (a.preventedByNestedSwiper) return v.touches.startX = "touchmove" === a.type ? a.targetTouches[0].pageX : a.pageX, void (v.touches.startY = "touchmove" === a.type ? a.targetTouches[0].pageY : a.pageY);if (v.params.onlyExternal) return v.allowClick = !1, void (b && (v.touches.startX = v.touches.currentX = "touchmove" === a.type ? a.targetTouches[0].pageX : a.pageX, v.touches.startY = v.touches.currentY = "touchmove" === a.type ? a.targetTouches[0].pageY : a.pageY, C = Date.now()));if (B && v.params.touchReleaseOnEdges && !v.params.loop) if (v.isHorizontal()) {
            if (v.touches.currentX < v.touches.startX && v.translate <= v.maxTranslate() || v.touches.currentX > v.touches.startX && v.translate >= v.minTranslate()) return;
          } else if (v.touches.currentY < v.touches.startY && v.translate <= v.maxTranslate() || v.touches.currentY > v.touches.startY && v.translate >= v.minTranslate()) return;if (B && document.activeElement && a.target === document.activeElement && e(a.target).is(I)) return x = !0, void (v.allowClick = !1);if (T && v.emit("onTouchMove", v, a), !(a.targetTouches && a.targetTouches.length > 1)) {
            if (v.touches.currentX = "touchmove" === a.type ? a.targetTouches[0].pageX : a.pageX, v.touches.currentY = "touchmove" === a.type ? a.targetTouches[0].pageY : a.pageY, void 0 === S) {
              var t;v.isHorizontal() && v.touches.currentY === v.touches.startY || !v.isHorizontal() && v.touches.currentX === v.touches.startX ? S = !1 : (t = 180 * Math.atan2(Math.abs(v.touches.currentY - v.touches.startY), Math.abs(v.touches.currentX - v.touches.startX)) / Math.PI, S = v.isHorizontal() ? t > v.params.touchAngle : 90 - t > v.params.touchAngle);
            }if (S && v.emit("onTouchMoveOpposite", v, a), void 0 === D && (v.touches.currentX === v.touches.startX && v.touches.currentY === v.touches.startY || (D = !0)), b) {
              if (S) return void (b = !1);if (D) {
                v.allowClick = !1, v.emit("onSliderMove", v, a), a.preventDefault(), v.params.touchMoveStopPropagation && !v.params.nested && a.stopPropagation(), x || (i.loop && v.fixLoop(), M = v.getWrapperTranslate(), v.setWrapperTransition(0), v.animating && v.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd"), v.params.autoplay && v.autoplaying && (v.params.autoplayDisableOnInteraction ? v.stopAutoplay() : v.pauseAutoplay()), E = !1, !v.params.grabCursor || !0 !== v.params.allowSwipeToNext && !0 !== v.params.allowSwipeToPrev || v.setGrabCursor(!0)), x = !0;var s = v.touches.diff = v.isHorizontal() ? v.touches.currentX - v.touches.startX : v.touches.currentY - v.touches.startY;s *= v.params.touchRatio, v.rtl && (s = -s), v.swipeDirection = s > 0 ? "prev" : "next", y = s + M;var r = !0;if (s > 0 && y > v.minTranslate() ? (r = !1, v.params.resistance && (y = v.minTranslate() - 1 + Math.pow(-v.minTranslate() + M + s, v.params.resistanceRatio))) : s < 0 && y < v.maxTranslate() && (r = !1, v.params.resistance && (y = v.maxTranslate() + 1 - Math.pow(v.maxTranslate() - M - s, v.params.resistanceRatio))), r && (a.preventedByNestedSwiper = !0), !v.params.allowSwipeToNext && "next" === v.swipeDirection && y < M && (y = M), !v.params.allowSwipeToPrev && "prev" === v.swipeDirection && y > M && (y = M), v.params.threshold > 0) {
                  if (!(Math.abs(s) > v.params.threshold || z)) return void (y = M);if (!z) return z = !0, v.touches.startX = v.touches.currentX, v.touches.startY = v.touches.currentY, y = M, void (v.touches.diff = v.isHorizontal() ? v.touches.currentX - v.touches.startX : v.touches.currentY - v.touches.startY);
                }v.params.followFinger && ((v.params.freeMode || v.params.watchSlidesProgress) && v.updateActiveIndex(), v.params.freeMode && (0 === L.length && L.push({ position: v.touches[v.isHorizontal() ? "startX" : "startY"], time: C }), L.push({ position: v.touches[v.isHorizontal() ? "currentX" : "currentY"], time: new window.Date().getTime() })), v.updateProgress(y), v.setWrapperTranslate(y));
              }
            }
          }
        }
      }, v.onTouchEnd = function (a) {
        if (a.originalEvent && (a = a.originalEvent), T && v.emit("onTouchEnd", v, a), T = !1, b) {
          v.params.grabCursor && x && b && (!0 === v.params.allowSwipeToNext || !0 === v.params.allowSwipeToPrev) && v.setGrabCursor(!1);var t = Date.now(),
              s = t - C;if (v.allowClick && (v.updateClickedSlide(a), v.emit("onTap", v, a), s < 300 && t - k > 300 && (P && clearTimeout(P), P = setTimeout(function () {
            v && (v.params.paginationHide && v.paginationContainer.length > 0 && !e(a.target).hasClass(v.params.bulletClass) && v.paginationContainer.toggleClass(v.params.paginationHiddenClass), v.emit("onClick", v, a));
          }, 300)), s < 300 && t - k < 300 && (P && clearTimeout(P), v.emit("onDoubleTap", v, a))), k = Date.now(), setTimeout(function () {
            v && (v.allowClick = !0);
          }, 0), !b || !x || !v.swipeDirection || 0 === v.touches.diff || y === M) return void (b = x = !1);b = x = !1;var i;if (i = v.params.followFinger ? v.rtl ? v.translate : -v.translate : -y, v.params.freeMode) {
            if (i < -v.minTranslate()) return void v.slideTo(v.activeIndex);if (i > -v.maxTranslate()) return void (v.slides.length < v.snapGrid.length ? v.slideTo(v.snapGrid.length - 1) : v.slideTo(v.slides.length - 1));if (v.params.freeModeMomentum) {
              if (L.length > 1) {
                var r = L.pop(),
                    n = L.pop(),
                    o = r.position - n.position,
                    l = r.time - n.time;v.velocity = o / l, v.velocity = v.velocity / 2, Math.abs(v.velocity) < v.params.freeModeMinimumVelocity && (v.velocity = 0), (l > 150 || new window.Date().getTime() - r.time > 300) && (v.velocity = 0);
              } else v.velocity = 0;v.velocity = v.velocity * v.params.freeModeMomentumVelocityRatio, L.length = 0;var p = 1e3 * v.params.freeModeMomentumRatio,
                  d = v.velocity * p,
                  u = v.translate + d;v.rtl && (u = -u);var c,
                  m = !1,
                  h = 20 * Math.abs(v.velocity) * v.params.freeModeMomentumBounceRatio;if (u < v.maxTranslate()) v.params.freeModeMomentumBounce ? (u + v.maxTranslate() < -h && (u = v.maxTranslate() - h), c = v.maxTranslate(), m = !0, E = !0) : u = v.maxTranslate();else if (u > v.minTranslate()) v.params.freeModeMomentumBounce ? (u - v.minTranslate() > h && (u = v.minTranslate() + h), c = v.minTranslate(), m = !0, E = !0) : u = v.minTranslate();else if (v.params.freeModeSticky) {
                var f,
                    g = 0;for (g = 0; g < v.snapGrid.length; g += 1) {
                  if (v.snapGrid[g] > -u) {
                    f = g;break;
                  }
                }u = Math.abs(v.snapGrid[f] - u) < Math.abs(v.snapGrid[f - 1] - u) || "next" === v.swipeDirection ? v.snapGrid[f] : v.snapGrid[f - 1], v.rtl || (u = -u);
              }if (0 !== v.velocity) p = v.rtl ? Math.abs((-u - v.translate) / v.velocity) : Math.abs((u - v.translate) / v.velocity);else if (v.params.freeModeSticky) return void v.slideReset();v.params.freeModeMomentumBounce && m ? (v.updateProgress(c), v.setWrapperTransition(p), v.setWrapperTranslate(u), v.onTransitionStart(), v.animating = !0, v.wrapper.transitionEnd(function () {
                v && E && (v.emit("onMomentumBounce", v), v.setWrapperTransition(v.params.speed), v.setWrapperTranslate(c), v.wrapper.transitionEnd(function () {
                  v && v.onTransitionEnd();
                }));
              })) : v.velocity ? (v.updateProgress(u), v.setWrapperTransition(p), v.setWrapperTranslate(u), v.onTransitionStart(), v.animating || (v.animating = !0, v.wrapper.transitionEnd(function () {
                v && v.onTransitionEnd();
              }))) : v.updateProgress(u), v.updateActiveIndex();
            }return void ((!v.params.freeModeMomentum || s >= v.params.longSwipesMs) && (v.updateProgress(), v.updateActiveIndex()));
          }var w,
              S = 0,
              z = v.slidesSizesGrid[0];for (w = 0; w < v.slidesGrid.length; w += v.params.slidesPerGroup) {
            void 0 !== v.slidesGrid[w + v.params.slidesPerGroup] ? i >= v.slidesGrid[w] && i < v.slidesGrid[w + v.params.slidesPerGroup] && (S = w, z = v.slidesGrid[w + v.params.slidesPerGroup] - v.slidesGrid[w]) : i >= v.slidesGrid[w] && (S = w, z = v.slidesGrid[v.slidesGrid.length - 1] - v.slidesGrid[v.slidesGrid.length - 2]);
          }var I = (i - v.slidesGrid[S]) / z;if (s > v.params.longSwipesMs) {
            if (!v.params.longSwipes) return void v.slideTo(v.activeIndex);"next" === v.swipeDirection && (I >= v.params.longSwipesRatio ? v.slideTo(S + v.params.slidesPerGroup) : v.slideTo(S)), "prev" === v.swipeDirection && (I > 1 - v.params.longSwipesRatio ? v.slideTo(S + v.params.slidesPerGroup) : v.slideTo(S));
          } else {
            if (!v.params.shortSwipes) return void v.slideTo(v.activeIndex);"next" === v.swipeDirection && v.slideTo(S + v.params.slidesPerGroup), "prev" === v.swipeDirection && v.slideTo(S);
          }
        }
      }, v._slideTo = function (e, a) {
        return v.slideTo(e, a, !0, !0);
      }, v.slideTo = function (e, a, t, s) {
        void 0 === t && (t = !0), void 0 === e && (e = 0), e < 0 && (e = 0), v.snapIndex = Math.floor(e / v.params.slidesPerGroup), v.snapIndex >= v.snapGrid.length && (v.snapIndex = v.snapGrid.length - 1), (v.activeIndex || v.initialSlide || 0) === (v.previousIndex || 0) && t && v.emit("beforeSlideChangeStart", v);var i = -v.snapGrid[v.snapIndex];if (v.params.autoplay && v.autoplaying && (s || !v.params.autoplayDisableOnInteraction ? v.pauseAutoplay(a) : v.stopAutoplay()), v.updateProgress(i), v.params.normalizeSlideIndex) for (var r = 0; r < v.slidesGrid.length; r++) {
          -Math.floor(100 * i) >= Math.floor(100 * v.slidesGrid[r]) && (e = r);
        }return !(!v.params.allowSwipeToNext && i < v.translate && i < v.minTranslate()) && !(!v.params.allowSwipeToPrev && i > v.translate && i > v.maxTranslate() && (v.activeIndex || 0) !== e) && (void 0 === a && (a = v.params.speed), v.previousIndex = v.activeIndex || 0, v.activeIndex = e, v.updateRealIndex(), v.rtl && -i === v.translate || !v.rtl && i === v.translate ? (v.params.autoHeight && v.updateAutoHeight(), v.updateClasses(), "slide" !== v.params.effect && v.setWrapperTranslate(i), !1) : (v.updateClasses(), v.onTransitionStart(t), 0 === a || v.browser.lteIE9 ? (v.setWrapperTranslate(i), v.setWrapperTransition(0), v.onTransitionEnd(t)) : (v.setWrapperTranslate(i), v.setWrapperTransition(a), v.animating || (v.animating = !0, v.wrapper.transitionEnd(function () {
          v && v.onTransitionEnd(t);
        }))), !0));
      }, v.onTransitionStart = function (e) {
        void 0 === e && (e = !0), v.params.autoHeight && v.updateAutoHeight(), v.lazy && v.lazy.onTransitionStart(), e && (v.emit("onTransitionStart", v), v.activeIndex !== v.previousIndex && (v.emit("onSlideChangeStart", v), v.activeIndex > v.previousIndex ? v.emit("onSlideNextStart", v) : v.emit("onSlidePrevStart", v)));
      }, v.onTransitionEnd = function (e) {
        v.animating = !1, v.setWrapperTransition(0), void 0 === e && (e = !0), v.lazy && v.lazy.onTransitionEnd(), e && (v.emit("onTransitionEnd", v), v.activeIndex !== v.previousIndex && (v.emit("onSlideChangeEnd", v), v.activeIndex > v.previousIndex ? v.emit("onSlideNextEnd", v) : v.emit("onSlidePrevEnd", v))), v.params.history && v.history && v.history.setHistory(v.params.history, v.activeIndex), v.params.hashnav && v.hashnav && v.hashnav.setHash();
      }, v.slideNext = function (e, a, t) {
        if (v.params.loop) {
          if (v.animating) return !1;v.fixLoop();v.container[0].clientLeft;return v.slideTo(v.activeIndex + v.params.slidesPerGroup, a, e, t);
        }return v.slideTo(v.activeIndex + v.params.slidesPerGroup, a, e, t);
      }, v._slideNext = function (e) {
        return v.slideNext(!0, e, !0);
      }, v.slidePrev = function (e, a, t) {
        if (v.params.loop) {
          if (v.animating) return !1;v.fixLoop();v.container[0].clientLeft;return v.slideTo(v.activeIndex - 1, a, e, t);
        }return v.slideTo(v.activeIndex - 1, a, e, t);
      }, v._slidePrev = function (e) {
        return v.slidePrev(!0, e, !0);
      }, v.slideReset = function (e, a, t) {
        return v.slideTo(v.activeIndex, a, e);
      }, v.disableTouchControl = function () {
        return v.params.onlyExternal = !0, !0;
      }, v.enableTouchControl = function () {
        return v.params.onlyExternal = !1, !0;
      }, v.setWrapperTransition = function (e, a) {
        v.wrapper.transition(e), "slide" !== v.params.effect && v.effects[v.params.effect] && v.effects[v.params.effect].setTransition(e), v.params.parallax && v.parallax && v.parallax.setTransition(e), v.params.scrollbar && v.scrollbar && v.scrollbar.setTransition(e), v.params.control && v.controller && v.controller.setTransition(e, a), v.emit("onSetTransition", v, e);
      }, v.setWrapperTranslate = function (e, a, t) {
        var s = 0,
            i = 0;v.isHorizontal() ? s = v.rtl ? -e : e : i = e, v.params.roundLengths && (s = r(s), i = r(i)), v.params.virtualTranslate || (v.support.transforms3d ? v.wrapper.transform("translate3d(" + s + "px, " + i + "px, 0px)") : v.wrapper.transform("translate(" + s + "px, " + i + "px)")), v.translate = v.isHorizontal() ? s : i;var n,
            o = v.maxTranslate() - v.minTranslate();n = 0 === o ? 0 : (e - v.minTranslate()) / o, n !== v.progress && v.updateProgress(e), a && v.updateActiveIndex(), "slide" !== v.params.effect && v.effects[v.params.effect] && v.effects[v.params.effect].setTranslate(v.translate), v.params.parallax && v.parallax && v.parallax.setTranslate(v.translate), v.params.scrollbar && v.scrollbar && v.scrollbar.setTranslate(v.translate), v.params.control && v.controller && v.controller.setTranslate(v.translate, t), v.emit("onSetTranslate", v, v.translate);
      }, v.getTranslate = function (e, a) {
        var t, s, i, r;return void 0 === a && (a = "x"), v.params.virtualTranslate ? v.rtl ? -v.translate : v.translate : (i = window.getComputedStyle(e, null), window.WebKitCSSMatrix ? (s = i.transform || i.webkitTransform, s.split(",").length > 6 && (s = s.split(", ").map(function (e) {
          return e.replace(",", ".");
        }).join(", ")), r = new window.WebKitCSSMatrix("none" === s ? "" : s)) : (r = i.MozTransform || i.OTransform || i.MsTransform || i.msTransform || i.transform || i.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,"), t = r.toString().split(",")), "x" === a && (s = window.WebKitCSSMatrix ? r.m41 : 16 === t.length ? parseFloat(t[12]) : parseFloat(t[4])), "y" === a && (s = window.WebKitCSSMatrix ? r.m42 : 16 === t.length ? parseFloat(t[13]) : parseFloat(t[5])), v.rtl && s && (s = -s), s || 0);
      }, v.getWrapperTranslate = function (e) {
        return void 0 === e && (e = v.isHorizontal() ? "x" : "y"), v.getTranslate(v.wrapper[0], e);
      }, v.observers = [], v.initObservers = function () {
        if (v.params.observeParents) for (var e = v.container.parents(), a = 0; a < e.length; a++) {
          l(e[a]);
        }l(v.container[0], { childList: !1 }), l(v.wrapper[0], { attributes: !1 });
      }, v.disconnectObservers = function () {
        for (var e = 0; e < v.observers.length; e++) {
          v.observers[e].disconnect();
        }v.observers = [];
      }, v.createLoop = function () {
        v.wrapper.children("." + v.params.slideClass + "." + v.params.slideDuplicateClass).remove();var a = v.wrapper.children("." + v.params.slideClass);if (v.params.fitSlideGroupWithBlank) {
          var t = v.params.slidesPerGroup - a.length % v.params.slidesPerGroup;if (t !== v.params.slidesPerGroup) {
            for (var s = 0; s < t; s++) {
              var i = e(document.createElement("div")).addClass(v.params.slideClass + " " + v.params.blankClass);v.wrapper.append(i);
            }a = v.wrapper.children();
          }
        }"auto" !== v.params.slidesPerView || v.params.loopedSlides || (v.params.loopedSlides = a.length), v.loopedSlides = parseInt(v.params.loopedSlides || v.params.slidesPerView, 10), v.loopedSlides = v.loopedSlides + v.params.loopAdditionalSlides, v.loopedSlides > a.length && (v.loopedSlides = a.length);var s,
            r = [],
            n = [];for (a.each(function (t, s) {
          var i = e(this);t < v.loopedSlides && n.push(s), t < a.length && t >= a.length - v.loopedSlides && r.push(s), i.attr("data-swiper-slide-index", t);
        }), s = 0; s < n.length; s++) {
          v.wrapper.append(e(n[s].cloneNode(!0)).addClass(v.params.slideDuplicateClass));
        }for (s = r.length - 1; s >= 0; s--) {
          v.wrapper.prepend(e(r[s].cloneNode(!0)).addClass(v.params.slideDuplicateClass));
        }
      }, v.destroyLoop = function () {
        v.wrapper.children("." + v.params.slideClass + "." + v.params.slideDuplicateClass).remove(), v.slides.removeAttr("data-swiper-slide-index");
      }, v.reLoop = function (e) {
        var a = v.activeIndex - v.loopedSlides;v.destroyLoop(), v.createLoop(), v.updateSlidesSize(), e && v.slideTo(a + v.loopedSlides, 0, !1);
      }, v.fixLoop = function () {
        var e;v.activeIndex < v.loopedSlides ? (e = v.slides.length - 3 * v.loopedSlides + v.activeIndex, e += v.loopedSlides, v.slideTo(e, 0, !1, !0)) : ("auto" === v.params.slidesPerView && v.activeIndex >= 2 * v.loopedSlides || v.activeIndex > v.slides.length - 2 * v.params.slidesPerView) && (e = -v.slides.length + v.activeIndex + v.loopedSlides, e += v.loopedSlides, v.slideTo(e, 0, !1, !0));
      }, v.appendSlide = function (e) {
        if (v.params.loop && v.destroyLoop(), "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && e.length) for (var a = 0; a < e.length; a++) {
          e[a] && v.wrapper.append(e[a]);
        } else v.wrapper.append(e);v.params.loop && v.createLoop(), v.params.observer && v.support.observer || v.update(!0);
      }, v.prependSlide = function (e) {
        v.params.loop && v.destroyLoop();var a = v.activeIndex + 1;if ("object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && e.length) {
          for (var t = 0; t < e.length; t++) {
            e[t] && v.wrapper.prepend(e[t]);
          }a = v.activeIndex + e.length;
        } else v.wrapper.prepend(e);v.params.loop && v.createLoop(), v.params.observer && v.support.observer || v.update(!0), v.slideTo(a, 0, !1);
      }, v.removeSlide = function (e) {
        v.params.loop && (v.destroyLoop(), v.slides = v.wrapper.children("." + v.params.slideClass));var a,
            t = v.activeIndex;if ("object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && e.length) {
          for (var s = 0; s < e.length; s++) {
            a = e[s], v.slides[a] && v.slides.eq(a).remove(), a < t && t--;
          }t = Math.max(t, 0);
        } else a = e, v.slides[a] && v.slides.eq(a).remove(), a < t && t--, t = Math.max(t, 0);v.params.loop && v.createLoop(), v.params.observer && v.support.observer || v.update(!0), v.params.loop ? v.slideTo(t + v.loopedSlides, 0, !1) : v.slideTo(t, 0, !1);
      }, v.removeAllSlides = function () {
        for (var e = [], a = 0; a < v.slides.length; a++) {
          e.push(a);
        }v.removeSlide(e);
      }, v.effects = { fade: { setTranslate: function setTranslate() {
            for (var e = 0; e < v.slides.length; e++) {
              var a = v.slides.eq(e),
                  t = a[0].swiperSlideOffset,
                  s = -t;v.params.virtualTranslate || (s -= v.translate);var i = 0;v.isHorizontal() || (i = s, s = 0);var r = v.params.fade.crossFade ? Math.max(1 - Math.abs(a[0].progress), 0) : 1 + Math.min(Math.max(a[0].progress, -1), 0);a.css({ opacity: r }).transform("translate3d(" + s + "px, " + i + "px, 0px)");
            }
          }, setTransition: function setTransition(e) {
            if (v.slides.transition(e), v.params.virtualTranslate && 0 !== e) {
              var a = !1;v.slides.transitionEnd(function () {
                if (!a && v) {
                  a = !0, v.animating = !1;for (var e = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"], t = 0; t < e.length; t++) {
                    v.wrapper.trigger(e[t]);
                  }
                }
              });
            }
          } }, flip: { setTranslate: function setTranslate() {
            for (var a = 0; a < v.slides.length; a++) {
              var t = v.slides.eq(a),
                  s = t[0].progress;v.params.flip.limitRotation && (s = Math.max(Math.min(t[0].progress, 1), -1));var i = t[0].swiperSlideOffset,
                  r = -180 * s,
                  n = r,
                  o = 0,
                  l = -i,
                  p = 0;if (v.isHorizontal() ? v.rtl && (n = -n) : (p = l, l = 0, o = -n, n = 0), t[0].style.zIndex = -Math.abs(Math.round(s)) + v.slides.length, v.params.flip.slideShadows) {
                var d = v.isHorizontal() ? t.find(".swiper-slide-shadow-left") : t.find(".swiper-slide-shadow-top"),
                    u = v.isHorizontal() ? t.find(".swiper-slide-shadow-right") : t.find(".swiper-slide-shadow-bottom");0 === d.length && (d = e('<div class="swiper-slide-shadow-' + (v.isHorizontal() ? "left" : "top") + '"></div>'), t.append(d)), 0 === u.length && (u = e('<div class="swiper-slide-shadow-' + (v.isHorizontal() ? "right" : "bottom") + '"></div>'), t.append(u)), d.length && (d[0].style.opacity = Math.max(-s, 0)), u.length && (u[0].style.opacity = Math.max(s, 0));
              }t.transform("translate3d(" + l + "px, " + p + "px, 0px) rotateX(" + o + "deg) rotateY(" + n + "deg)");
            }
          }, setTransition: function setTransition(a) {
            if (v.slides.transition(a).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(a), v.params.virtualTranslate && 0 !== a) {
              var t = !1;v.slides.eq(v.activeIndex).transitionEnd(function () {
                if (!t && v && e(this).hasClass(v.params.slideActiveClass)) {
                  t = !0, v.animating = !1;for (var a = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"], s = 0; s < a.length; s++) {
                    v.wrapper.trigger(a[s]);
                  }
                }
              });
            }
          } }, cube: { setTranslate: function setTranslate() {
            var a,
                t = 0;v.params.cube.shadow && (v.isHorizontal() ? (a = v.wrapper.find(".swiper-cube-shadow"), 0 === a.length && (a = e('<div class="swiper-cube-shadow"></div>'), v.wrapper.append(a)), a.css({ height: v.width + "px" })) : (a = v.container.find(".swiper-cube-shadow"), 0 === a.length && (a = e('<div class="swiper-cube-shadow"></div>'), v.container.append(a))));for (var s = 0; s < v.slides.length; s++) {
              var i = v.slides.eq(s),
                  r = 90 * s,
                  n = Math.floor(r / 360);v.rtl && (r = -r, n = Math.floor(-r / 360));var o = Math.max(Math.min(i[0].progress, 1), -1),
                  l = 0,
                  p = 0,
                  d = 0;s % 4 == 0 ? (l = 4 * -n * v.size, d = 0) : (s - 1) % 4 == 0 ? (l = 0, d = 4 * -n * v.size) : (s - 2) % 4 == 0 ? (l = v.size + 4 * n * v.size, d = v.size) : (s - 3) % 4 == 0 && (l = -v.size, d = 3 * v.size + 4 * v.size * n), v.rtl && (l = -l), v.isHorizontal() || (p = l, l = 0);var u = "rotateX(" + (v.isHorizontal() ? 0 : -r) + "deg) rotateY(" + (v.isHorizontal() ? r : 0) + "deg) translate3d(" + l + "px, " + p + "px, " + d + "px)";if (o <= 1 && o > -1 && (t = 90 * s + 90 * o, v.rtl && (t = 90 * -s - 90 * o)), i.transform(u), v.params.cube.slideShadows) {
                var c = v.isHorizontal() ? i.find(".swiper-slide-shadow-left") : i.find(".swiper-slide-shadow-top"),
                    m = v.isHorizontal() ? i.find(".swiper-slide-shadow-right") : i.find(".swiper-slide-shadow-bottom");0 === c.length && (c = e('<div class="swiper-slide-shadow-' + (v.isHorizontal() ? "left" : "top") + '"></div>'), i.append(c)), 0 === m.length && (m = e('<div class="swiper-slide-shadow-' + (v.isHorizontal() ? "right" : "bottom") + '"></div>'), i.append(m)), c.length && (c[0].style.opacity = Math.max(-o, 0)), m.length && (m[0].style.opacity = Math.max(o, 0));
              }
            }if (v.wrapper.css({ "-webkit-transform-origin": "50% 50% -" + v.size / 2 + "px", "-moz-transform-origin": "50% 50% -" + v.size / 2 + "px", "-ms-transform-origin": "50% 50% -" + v.size / 2 + "px", "transform-origin": "50% 50% -" + v.size / 2 + "px" }), v.params.cube.shadow) if (v.isHorizontal()) a.transform("translate3d(0px, " + (v.width / 2 + v.params.cube.shadowOffset) + "px, " + -v.width / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + v.params.cube.shadowScale + ")");else {
              var h = Math.abs(t) - 90 * Math.floor(Math.abs(t) / 90),
                  f = 1.5 - (Math.sin(2 * h * Math.PI / 360) / 2 + Math.cos(2 * h * Math.PI / 360) / 2),
                  g = v.params.cube.shadowScale,
                  w = v.params.cube.shadowScale / f,
                  b = v.params.cube.shadowOffset;a.transform("scale3d(" + g + ", 1, " + w + ") translate3d(0px, " + (v.height / 2 + b) + "px, " + -v.height / 2 / w + "px) rotateX(-90deg)");
            }var x = v.isSafari || v.isUiWebView ? -v.size / 2 : 0;v.wrapper.transform("translate3d(0px,0," + x + "px) rotateX(" + (v.isHorizontal() ? 0 : t) + "deg) rotateY(" + (v.isHorizontal() ? -t : 0) + "deg)");
          }, setTransition: function setTransition(e) {
            v.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), v.params.cube.shadow && !v.isHorizontal() && v.container.find(".swiper-cube-shadow").transition(e);
          } }, coverflow: { setTranslate: function setTranslate() {
            for (var a = v.translate, t = v.isHorizontal() ? -a + v.width / 2 : -a + v.height / 2, s = v.isHorizontal() ? v.params.coverflow.rotate : -v.params.coverflow.rotate, i = v.params.coverflow.depth, r = 0, n = v.slides.length; r < n; r++) {
              var o = v.slides.eq(r),
                  l = v.slidesSizesGrid[r],
                  p = o[0].swiperSlideOffset,
                  d = (t - p - l / 2) / l * v.params.coverflow.modifier,
                  u = v.isHorizontal() ? s * d : 0,
                  c = v.isHorizontal() ? 0 : s * d,
                  m = -i * Math.abs(d),
                  h = v.isHorizontal() ? 0 : v.params.coverflow.stretch * d,
                  f = v.isHorizontal() ? v.params.coverflow.stretch * d : 0;Math.abs(f) < .001 && (f = 0), Math.abs(h) < .001 && (h = 0), Math.abs(m) < .001 && (m = 0), Math.abs(u) < .001 && (u = 0), Math.abs(c) < .001 && (c = 0);var g = "translate3d(" + f + "px," + h + "px," + m + "px)  rotateX(" + c + "deg) rotateY(" + u + "deg)";if (o.transform(g), o[0].style.zIndex = 1 - Math.abs(Math.round(d)), v.params.coverflow.slideShadows) {
                var w = v.isHorizontal() ? o.find(".swiper-slide-shadow-left") : o.find(".swiper-slide-shadow-top"),
                    b = v.isHorizontal() ? o.find(".swiper-slide-shadow-right") : o.find(".swiper-slide-shadow-bottom");0 === w.length && (w = e('<div class="swiper-slide-shadow-' + (v.isHorizontal() ? "left" : "top") + '"></div>'), o.append(w)), 0 === b.length && (b = e('<div class="swiper-slide-shadow-' + (v.isHorizontal() ? "right" : "bottom") + '"></div>'), o.append(b)), w.length && (w[0].style.opacity = d > 0 ? d : 0), b.length && (b[0].style.opacity = -d > 0 ? -d : 0);
              }
            }if (v.browser.ie) {
              v.wrapper[0].style.perspectiveOrigin = t + "px 50%";
            }
          }, setTransition: function setTransition(e) {
            v.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e);
          } } }, v._plugins = [];for (var G in v.plugins) {
        var A = v.plugins[G](v, v.params[G]);A && v._plugins.push(A);
      }return v.callPlugins = function (e) {
        for (var a = 0; a < v._plugins.length; a++) {
          e in v._plugins[a] && v._plugins[a][e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        }
      }, v.emitterEventListeners = {}, v.emit = function (e) {
        v.params[e] && v.params[e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);var a;if (v.emitterEventListeners[e]) for (a = 0; a < v.emitterEventListeners[e].length; a++) {
          v.emitterEventListeners[e][a](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        }v.callPlugins && v.callPlugins(e, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      }, v.on = function (e, a) {
        return e = p(e), v.emitterEventListeners[e] || (v.emitterEventListeners[e] = []), v.emitterEventListeners[e].push(a), v;
      }, v.off = function (e, a) {
        var t;if (e = p(e), void 0 === a) return v.emitterEventListeners[e] = [], v;if (v.emitterEventListeners[e] && 0 !== v.emitterEventListeners[e].length) {
          for (t = 0; t < v.emitterEventListeners[e].length; t++) {
            v.emitterEventListeners[e][t] === a && v.emitterEventListeners[e].splice(t, 1);
          }return v;
        }
      }, v.once = function (e, a) {
        e = p(e);var t = function t() {
          a(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]), v.off(e, t);
        };return v.on(e, t), v;
      }, v.init = function () {
        v.params.loop && v.createLoop(), v.updateContainerSize(), v.updateSlidesSize(), v.updatePagination(), v.params.scrollbar && v.scrollbar && (v.scrollbar.set(), v.params.scrollbarDraggable && v.scrollbar.enableDraggable()), "slide" !== v.params.effect && v.effects[v.params.effect] && (v.params.loop || v.updateProgress(), v.effects[v.params.effect].setTranslate()), v.params.loop ? v.slideTo(v.params.initialSlide + v.loopedSlides, 0, v.params.runCallbacksOnInit) : (v.slideTo(v.params.initialSlide, 0, v.params.runCallbacksOnInit), 0 === v.params.initialSlide && (v.parallax && v.params.parallax && v.parallax.setTranslate(), v.lazy && v.params.lazyLoading && (v.lazy.load(), v.lazy.initialImageLoaded = !0))), v.attachEvents(), v.params.observer && v.support.observer && v.initObservers(), v.params.preloadImages && !v.params.lazyLoading && v.preloadImages(), v.params.zoom && v.zoom && v.zoom.init(), v.params.autoplay && v.startAutoplay(), v.params.keyboardControl && v.enableKeyboardControl && v.enableKeyboardControl(), v.params.mousewheelControl && v.enableMousewheelControl && v.enableMousewheelControl(), v.params.hashnavReplaceState && (v.params.replaceState = v.params.hashnavReplaceState), v.params.history && v.history && v.history.init(), v.params.hashnav && v.hashnav && v.hashnav.init(), v.params.a11y && v.a11y && v.a11y.init(), v.emit("onInit", v);
      }, v.cleanupStyles = function () {
        v.container.removeClass(v.classNames.join(" ")).removeAttr("style"), v.wrapper.removeAttr("style"), v.slides && v.slides.length && v.slides.removeClass([v.params.slideVisibleClass, v.params.slideActiveClass, v.params.slideNextClass, v.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row"), v.paginationContainer && v.paginationContainer.length && v.paginationContainer.removeClass(v.params.paginationHiddenClass), v.bullets && v.bullets.length && v.bullets.removeClass(v.params.bulletActiveClass), v.params.prevButton && e(v.params.prevButton).removeClass(v.params.buttonDisabledClass), v.params.nextButton && e(v.params.nextButton).removeClass(v.params.buttonDisabledClass), v.params.scrollbar && v.scrollbar && (v.scrollbar.track && v.scrollbar.track.length && v.scrollbar.track.removeAttr("style"), v.scrollbar.drag && v.scrollbar.drag.length && v.scrollbar.drag.removeAttr("style"));
      }, v.destroy = function (e, a) {
        v.detachEvents(), v.stopAutoplay(), v.params.scrollbar && v.scrollbar && v.params.scrollbarDraggable && v.scrollbar.disableDraggable(), v.params.loop && v.destroyLoop(), a && v.cleanupStyles(), v.disconnectObservers(), v.params.zoom && v.zoom && v.zoom.destroy(), v.params.keyboardControl && v.disableKeyboardControl && v.disableKeyboardControl(), v.params.mousewheelControl && v.disableMousewheelControl && v.disableMousewheelControl(), v.params.a11y && v.a11y && v.a11y.destroy(), v.params.history && !v.params.replaceState && window.removeEventListener("popstate", v.history.setHistoryPopState), v.params.hashnav && v.hashnav && v.hashnav.destroy(), v.emit("onDestroy"), !1 !== e && (v.container[0].swiper = null, v.container.data("swiper", null), v.container = null, v.wrapper = null, v = null);
      }, v.init(), v;
    }
  };a.prototype = { isSafari: function () {
      var e = window.navigator.userAgent.toLowerCase();return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0;
    }(), isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent), isArray: function isArray(e) {
      return "[object Array]" === Object.prototype.toString.apply(e);
    }, browser: { ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled, ieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1, lteIE9: function () {
        var e = document.createElement("div");return e.innerHTML = "\x3c!--[if lte IE 9]><i></i><![endif]--\x3e", 1 === e.getElementsByTagName("i").length;
      }() }, device: function () {
      var e = window.navigator.userAgent,
          a = e.match(/(Android);?[\s\/]+([\d.]+)?/),
          t = e.match(/(iPad).*OS\s([\d_]+)/),
          s = e.match(/(iPod)(.*OS\s([\d_]+))?/),
          i = !t && e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);return { ios: t || i || s, android: a };
    }(), support: { touch: window.Modernizr && !0 === Modernizr.touch || function () {
        return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch);
      }(), transforms3d: window.Modernizr && !0 === Modernizr.csstransforms3d || function () {
        var e = document.createElement("div").style;return "webkitPerspective" in e || "MozPerspective" in e || "OPerspective" in e || "MsPerspective" in e || "perspective" in e;
      }(), flexbox: function () {
        for (var e = document.createElement("div").style, a = "alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "), t = 0; t < a.length; t++) {
          if (a[t] in e) return !0;
        }
      }(), observer: function () {
        return "MutationObserver" in window || "WebkitMutationObserver" in window;
      }(), passiveListener: function () {
        var e = !1;try {
          var a = Object.defineProperty({}, "passive", { get: function get() {
              e = !0;
            } });window.addEventListener("testPassiveListener", null, a);
        } catch (e) {}return e;
      }(), gestures: function () {
        return "ongesturestart" in window;
      }() }, plugins: {} };for (var t = function () {
    var e = function e(_e) {
      var a = this,
          t = 0;for (t = 0; t < _e.length; t++) {
        a[t] = _e[t];
      }return a.length = _e.length, this;
    },
        a = function a(_a, t) {
      var s = [],
          i = 0;if (_a && !t && _a instanceof e) return _a;if (_a) if ("string" == typeof _a) {
        var r,
            n,
            o = _a.trim();if (o.indexOf("<") >= 0 && o.indexOf(">") >= 0) {
          var l = "div";for (0 === o.indexOf("<li") && (l = "ul"), 0 === o.indexOf("<tr") && (l = "tbody"), 0 !== o.indexOf("<td") && 0 !== o.indexOf("<th") || (l = "tr"), 0 === o.indexOf("<tbody") && (l = "table"), 0 === o.indexOf("<option") && (l = "select"), n = document.createElement(l), n.innerHTML = _a, i = 0; i < n.childNodes.length; i++) {
            s.push(n.childNodes[i]);
          }
        } else for (r = t || "#" !== _a[0] || _a.match(/[ .<>:~]/) ? (t || document).querySelectorAll(_a) : [document.getElementById(_a.split("#")[1])], i = 0; i < r.length; i++) {
          r[i] && s.push(r[i]);
        }
      } else if (_a.nodeType || _a === window || _a === document) s.push(_a);else if (_a.length > 0 && _a[0].nodeType) for (i = 0; i < _a.length; i++) {
        s.push(_a[i]);
      }return new e(s);
    };return e.prototype = { addClass: function addClass(e) {
        if (void 0 === e) return this;for (var a = e.split(" "), t = 0; t < a.length; t++) {
          for (var s = 0; s < this.length; s++) {
            this[s].classList.add(a[t]);
          }
        }return this;
      }, removeClass: function removeClass(e) {
        for (var a = e.split(" "), t = 0; t < a.length; t++) {
          for (var s = 0; s < this.length; s++) {
            this[s].classList.remove(a[t]);
          }
        }return this;
      }, hasClass: function hasClass(e) {
        return !!this[0] && this[0].classList.contains(e);
      }, toggleClass: function toggleClass(e) {
        for (var a = e.split(" "), t = 0; t < a.length; t++) {
          for (var s = 0; s < this.length; s++) {
            this[s].classList.toggle(a[t]);
          }
        }return this;
      }, attr: function attr(e, a) {
        if (1 === arguments.length && "string" == typeof e) return this[0] ? this[0].getAttribute(e) : void 0;for (var t = 0; t < this.length; t++) {
          if (2 === arguments.length) this[t].setAttribute(e, a);else for (var s in e) {
            this[t][s] = e[s], this[t].setAttribute(s, e[s]);
          }
        }return this;
      }, removeAttr: function removeAttr(e) {
        for (var a = 0; a < this.length; a++) {
          this[a].removeAttribute(e);
        }return this;
      }, data: function data(e, a) {
        if (void 0 !== a) {
          for (var t = 0; t < this.length; t++) {
            var s = this[t];s.dom7ElementDataStorage || (s.dom7ElementDataStorage = {}), s.dom7ElementDataStorage[e] = a;
          }return this;
        }if (this[0]) {
          var i = this[0].getAttribute("data-" + e);return i || (this[0].dom7ElementDataStorage && (e in this[0].dom7ElementDataStorage) ? this[0].dom7ElementDataStorage[e] : void 0);
        }
      }, transform: function transform(e) {
        for (var a = 0; a < this.length; a++) {
          var t = this[a].style;t.webkitTransform = t.MsTransform = t.msTransform = t.MozTransform = t.OTransform = t.transform = e;
        }return this;
      }, transition: function transition(e) {
        "string" != typeof e && (e += "ms");for (var a = 0; a < this.length; a++) {
          var t = this[a].style;t.webkitTransitionDuration = t.MsTransitionDuration = t.msTransitionDuration = t.MozTransitionDuration = t.OTransitionDuration = t.transitionDuration = e;
        }return this;
      }, on: function on(e, t, s, i) {
        function r(e) {
          var i = e.target;if (a(i).is(t)) s.call(i, e);else for (var r = a(i).parents(), n = 0; n < r.length; n++) {
            a(r[n]).is(t) && s.call(r[n], e);
          }
        }var n,
            o,
            l = e.split(" ");for (n = 0; n < this.length; n++) {
          if ("function" == typeof t || !1 === t) for ("function" == typeof t && (s = arguments[1], i = arguments[2] || !1), o = 0; o < l.length; o++) {
            this[n].addEventListener(l[o], s, i);
          } else for (o = 0; o < l.length; o++) {
            this[n].dom7LiveListeners || (this[n].dom7LiveListeners = []), this[n].dom7LiveListeners.push({ listener: s, liveListener: r }), this[n].addEventListener(l[o], r, i);
          }
        }return this;
      }, off: function off(e, a, t, s) {
        for (var i = e.split(" "), r = 0; r < i.length; r++) {
          for (var n = 0; n < this.length; n++) {
            if ("function" == typeof a || !1 === a) "function" == typeof a && (t = arguments[1], s = arguments[2] || !1), this[n].removeEventListener(i[r], t, s);else if (this[n].dom7LiveListeners) for (var o = 0; o < this[n].dom7LiveListeners.length; o++) {
              this[n].dom7LiveListeners[o].listener === t && this[n].removeEventListener(i[r], this[n].dom7LiveListeners[o].liveListener, s);
            }
          }
        }return this;
      }, once: function once(e, a, t, s) {
        function i(n) {
          t(n), r.off(e, a, i, s);
        }var r = this;"function" == typeof a && (a = !1, t = arguments[1], s = arguments[2]), r.on(e, a, i, s);
      }, trigger: function trigger(e, a) {
        for (var t = 0; t < this.length; t++) {
          var s;try {
            s = new window.CustomEvent(e, { detail: a, bubbles: !0, cancelable: !0 });
          } catch (t) {
            s = document.createEvent("Event"), s.initEvent(e, !0, !0), s.detail = a;
          }this[t].dispatchEvent(s);
        }return this;
      }, transitionEnd: function transitionEnd(e) {
        function a(r) {
          if (r.target === this) for (e.call(this, r), t = 0; t < s.length; t++) {
            i.off(s[t], a);
          }
        }var t,
            s = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"],
            i = this;if (e) for (t = 0; t < s.length; t++) {
          i.on(s[t], a);
        }return this;
      }, width: function width() {
        return this[0] === window ? window.innerWidth : this.length > 0 ? parseFloat(this.css("width")) : null;
      }, outerWidth: function outerWidth(e) {
        return this.length > 0 ? e ? this[0].offsetWidth + parseFloat(this.css("margin-right")) + parseFloat(this.css("margin-left")) : this[0].offsetWidth : null;
      }, height: function height() {
        return this[0] === window ? window.innerHeight : this.length > 0 ? parseFloat(this.css("height")) : null;
      }, outerHeight: function outerHeight(e) {
        return this.length > 0 ? e ? this[0].offsetHeight + parseFloat(this.css("margin-top")) + parseFloat(this.css("margin-bottom")) : this[0].offsetHeight : null;
      }, offset: function offset() {
        if (this.length > 0) {
          var e = this[0],
              a = e.getBoundingClientRect(),
              t = document.body,
              s = e.clientTop || t.clientTop || 0,
              i = e.clientLeft || t.clientLeft || 0,
              r = window.pageYOffset || e.scrollTop,
              n = window.pageXOffset || e.scrollLeft;return { top: a.top + r - s, left: a.left + n - i };
        }return null;
      }, css: function css(e, a) {
        var t;if (1 === arguments.length) {
          if ("string" != typeof e) {
            for (t = 0; t < this.length; t++) {
              for (var s in e) {
                this[t].style[s] = e[s];
              }
            }return this;
          }
          if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(e);
        }if (2 === arguments.length && "string" == typeof e) {
          for (t = 0; t < this.length; t++) {
            this[t].style[e] = a;
          }return this;
        }return this;
      }, each: function each(e) {
        for (var a = 0; a < this.length; a++) {
          e.call(this[a], a, this[a]);
        }return this;
      }, html: function html(e) {
        if (void 0 === e) return this[0] ? this[0].innerHTML : void 0;for (var a = 0; a < this.length; a++) {
          this[a].innerHTML = e;
        }return this;
      }, text: function text(e) {
        if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;for (var a = 0; a < this.length; a++) {
          this[a].textContent = e;
        }return this;
      }, is: function is(t) {
        if (!this[0]) return !1;var s, i;if ("string" == typeof t) {
          var r = this[0];if (r === document) return t === document;if (r === window) return t === window;if (r.matches) return r.matches(t);if (r.webkitMatchesSelector) return r.webkitMatchesSelector(t);if (r.mozMatchesSelector) return r.mozMatchesSelector(t);if (r.msMatchesSelector) return r.msMatchesSelector(t);for (s = a(t), i = 0; i < s.length; i++) {
            if (s[i] === this[0]) return !0;
          }return !1;
        }if (t === document) return this[0] === document;if (t === window) return this[0] === window;if (t.nodeType || t instanceof e) {
          for (s = t.nodeType ? [t] : t, i = 0; i < s.length; i++) {
            if (s[i] === this[0]) return !0;
          }return !1;
        }return !1;
      }, index: function index() {
        if (this[0]) {
          for (var e = this[0], a = 0; null !== (e = e.previousSibling);) {
            1 === e.nodeType && a++;
          }return a;
        }
      }, eq: function eq(a) {
        if (void 0 === a) return this;var t,
            s = this.length;return a > s - 1 ? new e([]) : a < 0 ? (t = s + a, new e(t < 0 ? [] : [this[t]])) : new e([this[a]]);
      }, append: function append(a) {
        var t, s;for (t = 0; t < this.length; t++) {
          if ("string" == typeof a) {
            var i = document.createElement("div");for (i.innerHTML = a; i.firstChild;) {
              this[t].appendChild(i.firstChild);
            }
          } else if (a instanceof e) for (s = 0; s < a.length; s++) {
            this[t].appendChild(a[s]);
          } else this[t].appendChild(a);
        }return this;
      }, prepend: function prepend(a) {
        var t, s;for (t = 0; t < this.length; t++) {
          if ("string" == typeof a) {
            var i = document.createElement("div");for (i.innerHTML = a, s = i.childNodes.length - 1; s >= 0; s--) {
              this[t].insertBefore(i.childNodes[s], this[t].childNodes[0]);
            }
          } else if (a instanceof e) for (s = 0; s < a.length; s++) {
            this[t].insertBefore(a[s], this[t].childNodes[0]);
          } else this[t].insertBefore(a, this[t].childNodes[0]);
        }return this;
      }, insertBefore: function insertBefore(e) {
        for (var t = a(e), s = 0; s < this.length; s++) {
          if (1 === t.length) t[0].parentNode.insertBefore(this[s], t[0]);else if (t.length > 1) for (var i = 0; i < t.length; i++) {
            t[i].parentNode.insertBefore(this[s].cloneNode(!0), t[i]);
          }
        }
      }, insertAfter: function insertAfter(e) {
        for (var t = a(e), s = 0; s < this.length; s++) {
          if (1 === t.length) t[0].parentNode.insertBefore(this[s], t[0].nextSibling);else if (t.length > 1) for (var i = 0; i < t.length; i++) {
            t[i].parentNode.insertBefore(this[s].cloneNode(!0), t[i].nextSibling);
          }
        }
      }, next: function next(t) {
        return new e(this.length > 0 ? t ? this[0].nextElementSibling && a(this[0].nextElementSibling).is(t) ? [this[0].nextElementSibling] : [] : this[0].nextElementSibling ? [this[0].nextElementSibling] : [] : []);
      }, nextAll: function nextAll(t) {
        var s = [],
            i = this[0];if (!i) return new e([]);for (; i.nextElementSibling;) {
          var r = i.nextElementSibling;t ? a(r).is(t) && s.push(r) : s.push(r), i = r;
        }return new e(s);
      }, prev: function prev(t) {
        return new e(this.length > 0 ? t ? this[0].previousElementSibling && a(this[0].previousElementSibling).is(t) ? [this[0].previousElementSibling] : [] : this[0].previousElementSibling ? [this[0].previousElementSibling] : [] : []);
      }, prevAll: function prevAll(t) {
        var s = [],
            i = this[0];if (!i) return new e([]);for (; i.previousElementSibling;) {
          var r = i.previousElementSibling;t ? a(r).is(t) && s.push(r) : s.push(r), i = r;
        }return new e(s);
      }, parent: function parent(e) {
        for (var t = [], s = 0; s < this.length; s++) {
          e ? a(this[s].parentNode).is(e) && t.push(this[s].parentNode) : t.push(this[s].parentNode);
        }return a(a.unique(t));
      }, parents: function parents(e) {
        for (var t = [], s = 0; s < this.length; s++) {
          for (var i = this[s].parentNode; i;) {
            e ? a(i).is(e) && t.push(i) : t.push(i), i = i.parentNode;
          }
        }return a(a.unique(t));
      }, find: function find(a) {
        for (var t = [], s = 0; s < this.length; s++) {
          for (var i = this[s].querySelectorAll(a), r = 0; r < i.length; r++) {
            t.push(i[r]);
          }
        }return new e(t);
      }, children: function children(t) {
        for (var s = [], i = 0; i < this.length; i++) {
          for (var r = this[i].childNodes, n = 0; n < r.length; n++) {
            t ? 1 === r[n].nodeType && a(r[n]).is(t) && s.push(r[n]) : 1 === r[n].nodeType && s.push(r[n]);
          }
        }return new e(a.unique(s));
      }, remove: function remove() {
        for (var e = 0; e < this.length; e++) {
          this[e].parentNode && this[e].parentNode.removeChild(this[e]);
        }return this;
      }, add: function add() {
        var e,
            t,
            s = this;for (e = 0; e < arguments.length; e++) {
          var i = a(arguments[e]);for (t = 0; t < i.length; t++) {
            s[s.length] = i[t], s.length++;
          }
        }return s;
      } }, a.fn = e.prototype, a.unique = function (e) {
      for (var a = [], t = 0; t < e.length; t++) {
        -1 === a.indexOf(e[t]) && a.push(e[t]);
      }return a;
    }, a;
  }(), s = ["jQuery", "Zepto", "Dom7"], i = 0; i < s.length; i++) {
    window[s[i]] && function (e) {
      e.fn.swiper = function (t) {
        var s;return e(this).each(function () {
          var e = new a(this, t);s || (s = e);
        }), s;
      };
    }(window[s[i]]);
  }var r;r = void 0 === t ? window.Dom7 || window.Zepto || window.jQuery : t, r && ("transitionEnd" in r.fn || (r.fn.transitionEnd = function (e) {
    function a(r) {
      if (r.target === this) for (e.call(this, r), t = 0; t < s.length; t++) {
        i.off(s[t], a);
      }
    }var t,
        s = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"],
        i = this;if (e) for (t = 0; t < s.length; t++) {
      i.on(s[t], a);
    }return this;
  }), "transform" in r.fn || (r.fn.transform = function (e) {
    for (var a = 0; a < this.length; a++) {
      var t = this[a].style;t.webkitTransform = t.MsTransform = t.msTransform = t.MozTransform = t.OTransform = t.transform = e;
    }return this;
  }), "transition" in r.fn || (r.fn.transition = function (e) {
    "string" != typeof e && (e += "ms");for (var a = 0; a < this.length; a++) {
      var t = this[a].style;t.webkitTransitionDuration = t.MsTransitionDuration = t.msTransitionDuration = t.MozTransitionDuration = t.OTransitionDuration = t.transitionDuration = e;
    }return this;
  }), "outerWidth" in r.fn || (r.fn.outerWidth = function (e) {
    return this.length > 0 ? e ? this[0].offsetWidth + parseFloat(this.css("margin-right")) + parseFloat(this.css("margin-left")) : this[0].offsetWidth : null;
  })), window.Swiper = a;
}(), "undefined" != typeof module ? module.exports = window.Swiper : "function" == typeof define && define.amd && define([], function () {
  "use strict";
  return window.Swiper;
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
